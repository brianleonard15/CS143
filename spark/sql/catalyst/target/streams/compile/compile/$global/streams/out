[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0mInitial source changes: [0m
[0m[[0mdebug[0m] [0m	removed:Set()[0m
[0m[[0mdebug[0m] [0m	added: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Catalog.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/annotation/SQLUserDefinedType.java, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/Rule.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/decimal/Decimal.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/QueryPlanner.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/errors/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/FunctionRegistry.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/complexTypes.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/joinTypes.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SpecificMutableRow.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Rand.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/sets.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeMap.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/Metadata.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala)[0m
[0m[[0mdebug[0m] [0m	modified: Set()[0m
[0m[[0mdebug[0m] [0mRemoved products: Set()[0m
[0m[[0mdebug[0m] [0mExternal API changes: API Changes: Set()[0m
[0m[[0mdebug[0m] [0mModified binary dependencies: Set()[0m
[0m[[0mdebug[0m] [0mInitial directly invalidated sources: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Catalog.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/annotation/SQLUserDefinedType.java, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/Rule.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/decimal/Decimal.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/QueryPlanner.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/errors/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/FunctionRegistry.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/complexTypes.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/joinTypes.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SpecificMutableRow.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Rand.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/sets.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeMap.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/Metadata.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala)[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0mSources indirectly invalidated by:[0m
[0m[[0mdebug[0m] [0m	product: Set()[0m
[0m[[0mdebug[0m] [0m	binary dep: Set()[0m
[0m[[0mdebug[0m] [0m	external source: Set()[0m
[0m[[0mdebug[0m] [0mAll initially invalidated sources: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Catalog.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/annotation/SQLUserDefinedType.java, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/Rule.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/decimal/Decimal.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/QueryPlanner.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/errors/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/FunctionRegistry.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/complexTypes.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/joinTypes.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SpecificMutableRow.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Rand.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/sets.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeMap.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/Metadata.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala)[0m
[0m[[0mdebug[0m] [0mRecompiling all 68 sources: invalidated sources (68) exceeded 50.0% of all sources[0m
[0m[[0minfo[0m] [0mCompiling 67 Scala sources and 1 Java source to /Users/bleonard/Documents/Databases/spark/sql/catalyst/target/scala-2.10/classes...[0m
[0m[[0mdebug[0m] [0mGetting compiler-interface from component compiler for Scala 2.10.4[0m
[0m[[0mdebug[0m] [0mGetting compiler-interface from component compiler for Scala 2.10.4[0m
[0m[[0mdebug[0m] [0mRunning cached compiler 2851cab2, interfacing (CompilerInterface) with Scala compiler version 2.10.4[0m
[0m[[0mdebug[0m] [0mCalling Scala compiler with arguments  (CompilerInterface):[0m
[0m[[0mdebug[0m] [0m	-unchecked[0m
[0m[[0mdebug[0m] [0m	-deprecation[0m
[0m[[0mdebug[0m] [0m	-feature[0m
[0m[[0mdebug[0m] [0m	-P:genjavadoc:out=/Users/bleonard/Documents/Databases/spark/sql/catalyst/target/java[0m
[0m[[0mdebug[0m] [0m	-Xplugin:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/genjavadoc-plugin_2.10.4-0.8.jar[0m
[0m[[0mdebug[0m] [0m	-Xplugin:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/paradise_2.10.4-2.0.1.jar[0m
[0m[[0mdebug[0m] [0m	-bootclasspath[0m
[0m[[0mdebug[0m] [0m	/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/classes:/Users/bleonard/.sbt/boot/scala-2.10.4/lib/scala-library.jar[0m
[0m[[0mdebug[0m] [0m	-classpath[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/target/scala-2.10/classes:/Users/bleonard/Documents/Databases/spark/core/target/scala-2.10/classes:/Users/bleonard/Documents/Databases/spark/network/common/target/scala-2.10/classes:/Users/bleonard/Documents/Databases/spark/network/shuffle/target/scala-2.10/classes:/Users/bleonard/.sbt/boot/scala-2.10.4/lib/scala-compiler.jar:/Users/bleonard/.sbt/boot/scala-2.10.4/lib/scala-reflect.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/netty-all-4.0.23.Final.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/unused-1.0.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/chill_2.10-0.5.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/chill-java-0.5.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/kryo-2.21.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/reflectasm-1.07-shaded.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/minlog-1.2.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/objenesis-1.2.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/hadoop-client-1.0.4.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/hadoop-core-1.0.4.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/xmlenc-0.52.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/commons-codec-1.4.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/commons-math-2.1.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/commons-configuration-1.6.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/commons-collections-3.2.1.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/commons-lang-2.4.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/commons-logging-1.1.1.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/commons-digester-1.8.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/commons-beanutils-1.7.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/commons-beanutils-core-1.8.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/commons-net-2.2.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/commons-el-1.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/hsqldb-1.8.0.10.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/oro-2.0.8.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jackson-mapper-asl-1.0.1.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jackson-core-asl-1.0.1.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jets3t-0.7.1.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/commons-httpclient-3.1.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/curator-recipes-2.4.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/curator-framework-2.4.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/curator-client-2.4.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/zookeeper-3.4.5.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/slf4j-log4j12-1.7.5.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/log4j-1.2.17.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jline-0.9.94.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/guava-14.0.1.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jetty-plus-8.1.14.v20131031.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/orbits/javax.transaction-1.1.1.v201105210645.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jetty-webapp-8.1.14.v20131031.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jetty-xml-8.1.14.v20131031.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jetty-util-8.1.14.v20131031.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jetty-servlet-8.1.14.v20131031.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jetty-security-8.1.14.v20131031.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jetty-server-8.1.14.v20131031.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/orbits/javax.servlet-3.0.0.v201112011016.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jetty-continuation-8.1.14.v20131031.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jetty-http-8.1.14.v20131031.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jetty-io-8.1.14.v20131031.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jetty-jndi-8.1.14.v20131031.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/orbits/javax.mail.glassfish-1.4.1.v201005082020.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/orbits/javax.activation-1.1.0.v201105071233.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/commons-lang3-3.3.2.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/commons-math3-3.1.1.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jsr305-1.3.9.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/slf4j-api-1.7.5.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jul-to-slf4j-1.7.5.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/jcl-over-slf4j-1.7.5.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/compress-lzf-1.0.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/snappy-java-1.1.1.6.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/lz4-1.2.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/RoaringBitmap-0.4.5.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/akka-remote_2.10-2.3.4-spark.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/akka-actor_2.10-2.3.4-spark.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/config-1.2.1.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/netty-3.8.0.Final.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/protobuf-java-2.5.0-spark.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/uncommons-maths-1.2.2a.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/akka-slf4j_2.10-2.3.4-spark.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/json4s-jackson_2.10-3.2.10.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/json4s-core_2.10-3.2.10.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/json4s-ast_2.10-3.2.10.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/paranamer-2.6.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/scalap-2.10.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/jackson-databind-2.3.1.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/jackson-annotations-2.3.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/jackson-core-2.3.1.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/mesos-0.18.1-shaded-protobuf.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/stream-2.7.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/metrics-core-3.0.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/metrics-jvm-3.0.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/metrics-json-3.0.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/bundles/metrics-graphite-3.0.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/tachyon-client-0.5.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/tachyon-0.5.0.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/commons-io-2.4.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/pyrolite-2.0.1.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/py4j-0.8.2.1.jar:/Users/bleonard/Documents/Databases/spark/lib_managed/jars/quasiquotes_2.10-2.0.1.jar[0m
[0m[[0mdebug[0m] [0mScala compilation took 23.679841 s[0m
[0m[[0mdebug[0m] [0mForking javac: /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/bin/javac @/var/folders/md/gpkdz3hs0m19687gx_4_t4wm0000gn/T/sbt_f90bf53d/argfile[0m
[0m[[0mdebug[0m] [0mjavac returned exit code: 0[0m
[0m[[0mdebug[0m] [0mJava compilation took 0.616011 s[0m
[0m[[0mdebug[0m] [0mJava analysis took 0.021983 s[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/package.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/package.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/package.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/package.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/package.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, package, wait, $asInstanceOf, equals, asInstanceOf, synchronized, $isInstanceOf, notifyAll, isInstanceOf, ==, clone, toString, !=, getClass, ne, eq, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Rand.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Rand.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Rand.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Rand.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Rand.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, nullable, n2, simpleString, children, wait, $asInstanceOf, numberedTreeString, map, productArity, equals, treeString, transformChildrenDown, argString, f1, asInstanceOf, n1, generateTreeString, childrenResolved, synchronized, EvaluatedType, nodeName, $isInstanceOf, c2, asCode, canEqual, makeCopy, transformUp, productPrefix, notifyAll, readResolve, Rand, otherCopyArgs, isInstanceOf, eval, stringArgs, references, i1, mapChildren, apply, flatMap, resolved, ==, fastEquals, clone, foreach, rand, i2, toString, !=, collect, getClass, dataType, foldable, transformDown, ne, eval$default$1, transform, withNewChildren, eq, productIterator, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala)[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, nullable, n2, simpleString, GreaterThan, children, predicate, predicates, wait, copy$default$2, $asInstanceOf, numberedTreeString, In, map, productArity, equals, treeString, transformChildrenDown, canEvaluate, argString, BinaryPredicate, f1, EqualNullSafe, asInstanceOf, n1, generateTreeString, PredicateHelper, childrenResolved, synchronized, left, splitDisjunctivePredicates, Predicate, EvaluatedType, And, nodeName, $isInstanceOf, trueValue, InterpretedPredicate, c2, asCode, canEqual, makeCopy, transformUp, falseValue, splitConjunctivePredicates, productPrefix, notifyAll, GreaterThanOrEqual, otherCopyArgs, isInstanceOf, eval, stringArgs, child, CaseWhen, LessThan, symbol, references, <init>, i1, mapChildren, apply, flatMap, resolved, BinaryComparison, hset, ==, If, elseValue, fastEquals, clone, foreach, LessThanOrEqual, $init$, i2, branchesArr, copy$default$3, Not, copy, values, toString, !=, branches, collect, getClass, copy$default$1, dataType, foldable, transformDown, EqualTo, ne, eval$default$1, transform, withNewChildren, value, eq, productIterator, right, ##, list, finalize, productElement, transformChildrenUp, hashCode, Or, getNodeNumbered, f2, InSet.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, canEvaluate, asInstanceOf, PredicateHelper, left, transformUp, splitConjunctivePredicates, isInstanceOf, child, <init>, apply, flatMap, ==, values, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, dataType, eq, list)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne, value)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(nullable, map, asInstanceOf, EvaluatedType, nodeName, makeCopy, isInstanceOf, eval, child, references, <init>, apply, ==, toString, !=, dataType, value, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala: Set(nullable, children, map, asInstanceOf, childrenResolved, Predicate, isInstanceOf, eval, child, <init>, resolved, ==, toString, !=, dataType, foldable, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, left, makeCopy, isInstanceOf, child, <init>, apply, resolved, ==, !=, branches, dataType, ne, transform, value, right, list)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, predicate, map, asInstanceOf, PredicateHelper, left, splitDisjunctivePredicates, trueValue, falseValue, splitConjunctivePredicates, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform, value, right, list)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, predicate, map, asInstanceOf, synchronized, left, trueValue, falseValue, isInstanceOf, eval, child, <init>, apply, ==, If, toString, !=, getClass, dataType, ne, value, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, dataType, eq, list)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne, value)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(nullable, map, asInstanceOf, EvaluatedType, nodeName, makeCopy, isInstanceOf, eval, child, references, <init>, apply, ==, toString, !=, dataType, value, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, predicate, map, asInstanceOf, PredicateHelper, left, splitDisjunctivePredicates, trueValue, falseValue, splitConjunctivePredicates, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform, value, right, list)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, predicate, map, asInstanceOf, synchronized, left, trueValue, falseValue, isInstanceOf, eval, child, <init>, apply, ==, If, toString, !=, getClass, dataType, ne, value, eq, right)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/Rule.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/Rule.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/Rule.scala)[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/Rule.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/Rule.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/Rule.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/Rule.scala[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/Rule.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/Rule.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, ruleName, wait, $asInstanceOf, equals, asInstanceOf, log_, synchronized, $isInstanceOf, Rule, logTrace, isTraceEnabled, logName, notifyAll, isInstanceOf, <init>, apply, ==, clone, toString, logError, !=, getClass, logWarning, initializeIfNecessary, ne, eq, log, ##, finalize, hashCode, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala: Set(asInstanceOf, Rule, isInstanceOf, <init>, apply, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(asInstanceOf, Rule, isInstanceOf, <init>, apply, ==, !=, ne, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(asInstanceOf, Rule, logTrace, isInstanceOf, <init>, apply, ==, !=, ne, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(asInstanceOf, Rule, isInstanceOf, <init>, apply, ==, !=, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala: Set(ruleName, asInstanceOf, Rule, logTrace, isInstanceOf, <init>, apply, ==, toString, !=, ne, eq, logDebug, logInfo)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala: Set(asInstanceOf, Rule, isInstanceOf, <init>, apply, getClass)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(asInstanceOf, Rule, isInstanceOf, <init>, apply, ==, !=, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala: Set(asInstanceOf, isInstanceOf, <init>, apply, ==, toString, !=, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(asInstanceOf, Rule, logTrace, isInstanceOf, <init>, apply, ==, !=, ne, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala: Set(asInstanceOf, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(asInstanceOf, Rule, logTrace, isInstanceOf, <init>, apply, ==, !=, ne, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(asInstanceOf, Rule, logTrace, isInstanceOf, <init>, apply, ==, !=, ne, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(asInstanceOf, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala: Set(asInstanceOf, isInstanceOf, <init>, apply, ==, getClass, ne, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala: Set(asInstanceOf, <init>, apply, ne, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala: Set(asInstanceOf, <init>, apply, ==, ne, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala: Set(asInstanceOf, <init>, apply, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(asInstanceOf, synchronized, isInstanceOf, <init>, apply, ==, toString, !=, getClass, ne, eq, log, logInfo)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, unapply, simpleString, children, resolveNesting, wait, copy$default$2, $asInstanceOf, numberedTreeString, printSchema, map, productArity, equals, statistics, treeString, transformChildrenDown, schemaString, argString, asInstanceOf, transformExpressions, generateTreeString, data, childrenResolved, log_, synchronized, nodeName, $isInstanceOf, logTrace, asCode, canEqual, expressions, outputSet, isTraceEnabled, makeCopy, transformUp, productPrefix, resolveChildren, cleanArgs, logName, notifyAll, readResolve, otherCopyArgs, missingInput, isInstanceOf, stringArgs, references, <init>, mapChildren, schema, apply$default$2, transformExpressionsDown, apply, LocalRelation, flatMap, resolved, ==, fastEquals, transformExpressionsUp, clone, loadData, sameResult, foreach, resolve, newInstance, copy, inputSet, toString, logError, !=, collect, getClass, logWarning, output, copy$default$1, initializeIfNecessary, transformDown, transformAllExpressions, ne, transform, withNewChildren, statePrefix, <init>$default$2, eq, productIterator, log, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(unapply, children, map, asInstanceOf, expressions, outputSet, isInstanceOf, references, <init>, transformExpressionsDown, apply, LocalRelation, flatMap, ==, transformExpressionsUp, !=, collect, output, transformAllExpressions, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala: Set(unapply, map, asInstanceOf, data, expressions, isInstanceOf, <init>, schema, apply, LocalRelation, ==, newInstance, toString, !=, output, ne, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, childrenResolved, logTrace, expressions, outputSet, transformUp, resolveChildren, isInstanceOf, references, <init>, apply, LocalRelation, flatMap, resolved, ==, foreach, resolve, !=, collect, output, transformDown, ne, transform, logDebug)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, nullable, n2, simpleString, children, name, printStackTrace, resolveNesting, getLocalizedMessage, wait, copy$default$2, $asInstanceOf, numberedTreeString, UnresolvedAttribute, printSchema, map, productArity, equals, statistics, treeString, transformChildrenDown, schemaString, argString, fillInStackTrace, initCause, f1, asInstanceOf, transformExpressions, n1, generateTreeString, childrenResolved, log_, synchronized, EvaluatedType, nodeName, $isInstanceOf, getCause, c2, logTrace, asCode, canEqual, expressions, outputSet, isTraceEnabled, makeCopy, transformUp, productPrefix, resolveChildren, cleanArgs, logName, notifyAll, expand, otherCopyArgs, missingInput, isInstanceOf, eval, stringArgs, getStackTrace, getStackTraceElement, alias, references, <init>, i1, mapChildren, getMessage, setStackTrace, schema, typeSuffix, transformExpressionsDown, apply, withName, getSuppressed, flatMap, resolved, tableName, ==, fastEquals, getStackTraceDepth, transformExpressionsUp, clone, Star, sameResult, foreach, addSuppressed, resolve, UnresolvedRelation, i2, newInstance, UnresolvedFunction, copy$default$3, copy, inputSet, metadata, withQualifiers, toString, UnresolvedException, logError, !=, withNullability, collect, getClass, databaseName, logWarning, qualifiers, output, copy$default$1, dataType, foldable, initializeIfNecessary, transformDown, transformAllExpressions, ne, exprId, eval$default$1, toAttribute, transform, withNewChildren, statePrefix, mapFunction, eq, productIterator, log, ##, finalize, table, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala: Set(map, asInstanceOf, expressions, isInstanceOf, references, <init>, apply, flatMap, ==, Star, foreach, ne, exprId, toAttribute, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(nullable, map, asInstanceOf, childrenResolved, c2, expressions, outputSet, isInstanceOf, eval, references, <init>, apply, resolved, ==, toString, UnresolvedException, !=, collect, dataType, foldable, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, name, UnresolvedAttribute, map, asInstanceOf, expressions, isInstanceOf, alias, <init>, apply, tableName, ==, toString, withNullability, output, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala: Set(nullable, n2, f1, asInstanceOf, n1, EvaluatedType, expressions, isInstanceOf, eval, <init>, i1, resolved, ==, toString, UnresolvedException, dataType, foldable, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, expressions, isInstanceOf, alias, <init>, i1, apply, flatMap, tableName, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala: Set(nullable, name, UnresolvedAttribute, asInstanceOf, EvaluatedType, nodeName, expressions, isInstanceOf, eval, <init>, typeSuffix, apply, resolved, ==, metadata, toString, qualifiers, dataType, exprId, eq, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala: Set(nullable, children, asInstanceOf, nodeName, expressions, isInstanceOf, eval, <init>, apply, flatMap, resolved, ==, toString, UnresolvedException, dataType, foldable, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala: Set(nullable, children, map, asInstanceOf, childrenResolved, expressions, isInstanceOf, eval, <init>, resolved, ==, toString, UnresolvedException, !=, dataType, foldable, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, name, map, asInstanceOf, transformExpressions, childrenResolved, logTrace, expressions, outputSet, transformUp, resolveChildren, expand, isInstanceOf, alias, references, <init>, apply, flatMap, resolved, tableName, ==, foreach, resolve, !=, collect, databaseName, output, dataType, transformDown, ne, toAttribute, transform, table, logDebug)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	hashSetForType, notify, rowType, unapply, expressionEvaluator, curried, toolBox, EvaluatedExpression, mutatorForType, wait, termForType, copy$default$2, $asInstanceOf, primitiveForType, GenerateOrdering, productArity, equals, setColumn, asInstanceOf, mutableRowType, genericRowType, log_, curId, synchronized, bind, $isInstanceOf, create, tupled, javaSeparator, logTrace, canEqual, copy$default$4, isTraceEnabled, projectionType, productPrefix, logName, notifyAll, readResolve, cache, code, isInstanceOf, canonicalize, getColumn, <init>, mutableProjectionType, apply, freshName, accessorForType, debugLogging, primitiveTerm, ==, clone, nullTerm, copy$default$3, copy, toString, defaultPrimitive, logError, !=, getClass, logWarning, genericMutableRowType, copy$default$1, initializeIfNecessary, ne, objectTerm, eq, productIterator, log, ##, finalize, productElement, hashCode, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/complexTypes.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/complexTypes.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/complexTypes.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/complexTypes.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/complexTypes.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, nullable, n2, simpleString, children, wait, copy$default$2, $asInstanceOf, numberedTreeString, field, map, productArity, equals, treeString, transformChildrenDown, argString, f1, asInstanceOf, n1, generateTreeString, childrenResolved, synchronized, GetField, EvaluatedType, nodeName, $isInstanceOf, c2, asCode, canEqual, makeCopy, transformUp, productPrefix, CreateArray, notifyAll, otherCopyArgs, isInstanceOf, eval, stringArgs, child, fieldResolved, references, structType, <init>, i1, mapChildren, apply, flatMap, resolved, ordinal, ==, fieldName, fastEquals, clone, childTypes, foreach, i2, copy, toString, GetItem, !=, collect, getClass, copy$default$1, dataType, foldable, transformDown, ne, eval$default$1, transform, withNewChildren, eq, productIterator, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, transformUp, isInstanceOf, child, <init>, apply, flatMap, ==, collect, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, isInstanceOf, structType, <init>, apply, ordinal, ==, fieldName, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, isInstanceOf, <init>, i1, apply, flatMap, ordinal, ==, fieldName, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, makeCopy, isInstanceOf, child, <init>, apply, resolved, ==, childTypes, !=, dataType, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, transformUp, isInstanceOf, child, references, <init>, apply, flatMap, resolved, ==, fieldName, foreach, !=, collect, dataType, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala: Set(children, map, asInstanceOf, childrenResolved, nodeName, isInstanceOf, <init>, apply, flatMap, resolved, ==, toString, !=, getClass, dataType, ne, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, map, asInstanceOf, isInstanceOf, eval, child, references, <init>, apply, flatMap, ordinal, ==, !=, collect, dataType, foldable, ne, transform)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, nullable, n2, simpleString, children, wait, copy$default$2, $asInstanceOf, numberedTreeString, map, productArity, equals, treeString, transformChildrenDown, argString, f1, asInstanceOf, n1, generateTreeString, childrenResolved, synchronized, EvaluatedType, nodeName, $isInstanceOf, c2, direction, asCode, canEqual, makeCopy, transformUp, Ascending, productPrefix, notifyAll, readResolve, otherCopyArgs, isInstanceOf, eval, stringArgs, child, SortOrder, references, <init>, i1, mapChildren, apply, flatMap, resolved, ==, fastEquals, clone, foreach, i2, copy, toString, Descending, !=, collect, getClass, copy$default$1, dataType, foldable, transformDown, SortDirection, ne, eval$default$1, transform, withNewChildren, eq, productIterator, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala: Set(children, map, asInstanceOf, direction, Ascending, isInstanceOf, eval, child, SortOrder, <init>, apply, ==, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Ascending, isInstanceOf, SortOrder, <init>, apply, ==, toString, Descending, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, direction, Ascending, isInstanceOf, SortOrder, <init>, i1, apply, flatMap, ==, i2, Descending, getClass, dataType, SortDirection, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala: Set(map, asInstanceOf, EvaluatedType, nodeName, isInstanceOf, child, SortOrder, <init>, apply, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala: Set(asInstanceOf, isInstanceOf, child, SortOrder, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, transformUp, isInstanceOf, child, references, <init>, apply, flatMap, resolved, ==, foreach, !=, collect, dataType, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala: Set(map, asInstanceOf, direction, Ascending, isInstanceOf, eval, child, SortOrder, <init>, apply, ==, clone, Descending, !=, dataType, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(children, map, asInstanceOf, childrenResolved, isInstanceOf, eval, child, SortOrder, <init>, apply, resolved, ==, toString, !=, dataType, ne, eq)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	toIterable, withFilter, toTraversable, notify, withPadding, anyNull, find, withRight, span, flatten, toBuffer, count, getShort, JoinedRow4, reduceOption, sliceWithKnownDelta, wait, +:, foldRight, indices, takeWhile, stringPrefix, $asInstanceOf, splitAt, minBy, size, union, intersect, inits, zip, compose, toSet, corresponds, :\, duplicate, map, sliding$default$2, takeRight, dropWhile, productArity, withLeft, toMap, filterNot, equals, InterpretedProjection, par, unzip3, repr, startsWith, toList, lastIndexOf, isNullAt, isTraversableAgain, head, asInstanceOf, sameElements, JoinedRow3, unzip, getDouble, row2, _hasNext, reduceLeftOption, sortBy, getString, synchronized, sliding, Self, lengthCompare, partition, indexOfSlice, aggregate, $isInstanceOf, forall, newBuilder, andThen, exprArray, mkString, min, scanRight, sequential, CombinationsItr, x$1, fold, buffer, getAs, scan, occCounts, nonEmpty, canEqual, expressions, tail, lastOption, dropRight, productPrefix, iterator, last, orElse, offs, lastIndexOfSlice, /:\, takeDestructively, notifyAll, JoinedRow, /:, getByte, toIterator, addString, pad, to, collectFirst, drop, isInstanceOf, reverse, filter, isDefinedAt, sortWith, row1, ++:, endsWith, GroupedIterator, <init>, containsSlice, toStream, go, JoinedRow2, companion, max, buffered, combinations, tails, cnts, updated, apply, ++, grouped, diff, flatMap, getFloat, take, gap, parCombiner, reduceRight, groupBy, ==, maxBy, :+, indexWhere, fill, sliceWithKnownBound, sorted, clone, permutations, distinct, slice, foreach, getInt, exists, x$4, reduceRightOption, toVector, toIndexedSeq, copyToBuffer, segmentLength, toArray, reduce, padTo, toSeq, next, zipWithIndex, idxs, swap, copy, toString, genericBuilder, getBoolean, copyToArray, runWith, target, length, seq, !=, InterpretedMutableProjection, transpose, _partial, padding, collect, headOption, PermutationsItr, getClass, WithFilter, copy$default$1, mutableRow, hasDefiniteSize, patch, JoinedRow5, foldLeft, contains, nums, toCollection, isEmpty, ne, elms, currentValue, withPartial, iterateUntilEmpty, init, reversed, hasNext, indexOf, reduceLeft, lastIndexWhere, lift, eq, prefixLength, filled, productIterator, reverseMap, sum, thisCollection, reverseIterator, ##, scanLeft, finalize, getLong, productElement, hashCode, zipAll, product, view, applyOrElse.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(anyNull, count, size, map, InterpretedProjection, head, asInstanceOf, mkString, expressions, iterator, isInstanceOf, <init>, apply, ==, toArray, next, toString, !=, isEmpty, hasNext, reduceLeft, eq, productIterator, sum)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, unapply, collectFilters, Unions, wait, $asInstanceOf, equals, canEvaluate, asInstanceOf, log_, synchronized, splitDisjunctivePredicates, $isInstanceOf, logTrace, isTraceEnabled, PhysicalOperation, splitConjunctivePredicates, logName, notifyAll, isInstanceOf, ReturnType, ==, PartialAggregation, clone, substitute, ExtractEquiJoinKeys, collectUnionChildren, collectAliases, toString, logError, !=, getClass, logWarning, initializeIfNecessary, FilteredOperation, collectProjectsAndFilters, ne, eq, log, ##, finalize, hashCode, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/annotation/SQLUserDefinedType.java...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/annotation/SQLUserDefinedType.java...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/annotation/SQLUserDefinedType.java)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/annotation/SQLUserDefinedType.java)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/annotation/SQLUserDefinedType.java source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	SQLUserDefinedType, equals, toString, udt, hashCode, annotationType.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mName hashing optimization doesn't apply to non-Scala dependency: /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/annotation/SQLUserDefinedType.java[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala: Set(SQLUserDefinedType, toString, udt)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	hyperLogLog, SumFunction, PartialAggregate, MaxFunction, notify, nullable, n2, simpleString, calcType, children, LastFunction, count, CountDistinct, cmp, Min, AggregateFunction, wait, ApproxCountDistinct, seen, copy$default$2, $asInstanceOf, numberedTreeString, partialEvaluations, map, CombineSetsAndCountFunction, productArity, equals, treeString, transformChildrenDown, argString, SumDistinct, zero, f1, asInstanceOf, n1, ApproxCountDistinctMergeFunction, generateTreeString, result, childrenResolved, synchronized, distinctValue, CountFunction, EvaluatedType, nodeName, $isInstanceOf, currentMin, c2, expr, asCode, canEqual, expressions, makeCopy, transformUp, productPrefix, relativeSD, Max, notifyAll, FirstFunction, finalEvaluation, base, otherCopyArgs, isInstanceOf, eval, addFunction, stringArgs, child, Sum, SumDistinctFunction, CountDistinctFunction, references, <init>, Count, i1, mapChildren, asPartial, apply, flatMap, CombineSetsAndSum, resolved, ApproxCountDistinctPartition, currentMax, ==, fastEquals, clone, CollectHashSetFunction, foreach, CombineSetsAndCount, CombineSetsAndSumFunction, Last, i2, newInstance, AverageFunction, copy$default$3, copy, inputSet, toString, Average, !=, collect, getClass, ApproxCountDistinctMerge, copy$default$1, update, dataType, foldable, transformDown, MinFunction, ApproxCountDistinctPartitionFunction, ne, eval$default$1, SplitEvaluation, transform, withNewChildren, eq, productIterator, sum, CollectHashSet, ##, finalize, AggregateExpression, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2, First.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(partialEvaluations, map, asInstanceOf, expr, expressions, transformUp, finalEvaluation, isInstanceOf, child, <init>, asPartial, apply, flatMap, ==, collect, ne, SplitEvaluation, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, expr, expressions, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, expressions, base, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, expressions, makeCopy, isInstanceOf, child, <init>, apply, resolved, ==, inputSet, !=, dataType, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, result, childrenResolved, expr, expressions, transformUp, isInstanceOf, child, references, <init>, apply, flatMap, resolved, ==, foreach, !=, collect, dataType, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, map, asInstanceOf, result, expr, expressions, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	hashSetForType, notify, rowType, unapply, expressionEvaluator, curried, toolBox, EvaluatedExpression, mutatorForType, GeneratePredicate, wait, termForType, copy$default$2, $asInstanceOf, primitiveForType, productArity, equals, setColumn, asInstanceOf, mutableRowType, genericRowType, log_, curId, synchronized, bind, $isInstanceOf, create, tupled, javaSeparator, logTrace, canEqual, copy$default$4, isTraceEnabled, projectionType, productPrefix, logName, notifyAll, readResolve, cache, code, isInstanceOf, canonicalize, getColumn, <init>, mutableProjectionType, apply, freshName, accessorForType, debugLogging, primitiveTerm, ==, clone, nullTerm, copy$default$3, copy, toString, defaultPrimitive, logError, !=, getClass, logWarning, genericMutableRowType, copy$default$1, initializeIfNecessary, ne, objectTerm, eq, productIterator, log, ##, finalize, productElement, hashCode, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala)[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala source file has the following implicit definitions changed:[0m
[0m[[0mdebug[0m] [0m	regex, asParser, accept, keyword, literal, parser2packrat.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following member ref dependencies of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala are invalidated:[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala)[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, simpleString, children, wait, $asInstanceOf, numberedTreeString, printSchema, map, equals, treeString, transformChildrenDown, schemaString, argString, asInstanceOf, transformExpressions, generateTreeString, synchronized, nodeName, $isInstanceOf, asCode, expressions, outputSet, makeCopy, transformUp, QueryPlan, notifyAll, otherCopyArgs, missingInput, isInstanceOf, stringArgs, references, <init>, mapChildren, schema, transformExpressionsDown, apply, flatMap, ==, fastEquals, transformExpressionsUp, clone, foreach, inputSet, toString, !=, collect, getClass, output, transformDown, transformAllExpressions, ne, transform, withNewChildren, statePrefix, eq, ##, finalize, transformChildrenUp, hashCode, getNodeNumbered.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(map, asInstanceOf, expressions, outputSet, isInstanceOf, references, <init>, apply, ==, toString, !=, collect, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, expressions, transformUp, isInstanceOf, <init>, apply, flatMap, ==, collect, output, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, expressions, isInstanceOf, <init>, apply, ==, toString, output, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala: Set(asInstanceOf, expressions, isInstanceOf, <init>, ==, toString, output, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, expressions, makeCopy, isInstanceOf, <init>, apply, ==, inputSet, !=, output, transformAllExpressions, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, expressions, outputSet, transformUp, isInstanceOf, references, <init>, apply, flatMap, ==, foreach, !=, collect, output, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(children, map, asInstanceOf, expressions, isInstanceOf, <init>, apply, ==, toString, !=, output, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala: Set(children, map, asInstanceOf, nodeName, expressions, QueryPlan, isInstanceOf, <init>, apply, flatMap, ==, toString, !=, getClass, output, ne, statePrefix, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, expressions, outputSet, isInstanceOf, references, <init>, transformExpressionsDown, apply, flatMap, ==, transformExpressionsUp, !=, collect, output, transformAllExpressions, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, expressions, outputSet, isInstanceOf, references, <init>, transformExpressionsDown, apply, flatMap, ==, transformExpressionsUp, !=, collect, output, transformAllExpressions, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala: Set(map, asInstanceOf, expressions, isInstanceOf, <init>, schema, apply, ==, toString, !=, output, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, expressions, outputSet, transformUp, isInstanceOf, references, <init>, apply, flatMap, ==, foreach, !=, collect, output, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, expressions, outputSet, transformUp, isInstanceOf, references, <init>, apply, flatMap, ==, foreach, !=, collect, output, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, flatMap, ==, toString, getClass, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala: Set(map, asInstanceOf, expressions, isInstanceOf, references, <init>, apply, flatMap, ==, foreach, ne, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(map, asInstanceOf, expressions, outputSet, isInstanceOf, references, <init>, apply, ==, toString, !=, collect, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, expressions, isInstanceOf, <init>, apply, ==, toString, output, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala: Set(asInstanceOf, expressions, isInstanceOf, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, expressions, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala: Set(asInstanceOf, nodeName, expressions, isInstanceOf, <init>, apply, ==, toString, eq, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala: Set(children, asInstanceOf, nodeName, expressions, isInstanceOf, <init>, apply, flatMap, ==, toString, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala: Set(children, map, asInstanceOf, expressions, isInstanceOf, <init>, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, expressions, outputSet, transformUp, isInstanceOf, references, <init>, apply, flatMap, ==, foreach, !=, collect, output, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Catalog.scala: Set(map, isInstanceOf, <init>, ==, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, expressions, transformUp, isInstanceOf, <init>, apply, flatMap, ==, collect, output, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, expressions, isInstanceOf, <init>, apply, ==, toString, output, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, expressions, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, expressions, makeCopy, isInstanceOf, <init>, apply, ==, inputSet, !=, output, transformAllExpressions, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, expressions, outputSet, transformUp, isInstanceOf, references, <init>, apply, flatMap, ==, foreach, !=, collect, output, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, expressions, outputSet, isInstanceOf, references, <init>, transformExpressionsDown, apply, flatMap, ==, transformExpressionsUp, !=, collect, output, transformAllExpressions, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Catalog.scala: Set(map, isInstanceOf, <init>, ==, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(map, asInstanceOf, expressions, outputSet, isInstanceOf, references, <init>, apply, ==, toString, !=, collect, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, flatMap, ==, toString, getClass, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, expressions, transformUp, isInstanceOf, <init>, apply, flatMap, ==, collect, output, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, expressions, isInstanceOf, <init>, apply, ==, toString, output, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala: Set(map, asInstanceOf, expressions, isInstanceOf, <init>, apply, ==, toString, output, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/QueryPlanner.scala: Set(<init>, apply, flatMap)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, expressions, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala: Set(asInstanceOf, expressions, isInstanceOf, <init>, ==, toString, output, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala: Set(asInstanceOf, expressions, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala: Set(asInstanceOf, expressions, isInstanceOf, <init>, ==, toString, output, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala: Set(children, map, asInstanceOf, nodeName, expressions, isInstanceOf, <init>, apply, ==, toString, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, collect, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, expressions, makeCopy, isInstanceOf, <init>, apply, ==, inputSet, !=, output, transformAllExpressions, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, expressions, outputSet, transformUp, isInstanceOf, references, <init>, apply, flatMap, ==, foreach, !=, collect, output, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(children, map, asInstanceOf, expressions, isInstanceOf, <init>, apply, ==, toString, !=, output, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, expressions, outputSet, isInstanceOf, references, <init>, transformExpressionsDown, apply, flatMap, ==, transformExpressionsUp, !=, collect, output, transformAllExpressions, ne, transform)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/errors/package.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/errors/package.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/errors/package.scala)[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/errors/package.scala[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/errors/package.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/errors/package.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, package, printStackTrace, getLocalizedMessage, wait, $asInstanceOf, TreeNodeException, equals, fillInStackTrace, initCause, asInstanceOf, synchronized, $isInstanceOf, getCause, attachTree, notifyAll, attachTree$default$2, isInstanceOf, getStackTrace, getStackTraceElement, <init>, getMessage, setStackTrace, getSuppressed, ==, getStackTraceDepth, clone, addSuppressed, toString, !=, getClass, getTree, ne, eq, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala: Set(package, asInstanceOf, isInstanceOf, <init>, ==, ne, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(package, asInstanceOf, isInstanceOf, <init>, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(package, asInstanceOf, isInstanceOf, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala: Set(package, asInstanceOf, isInstanceOf, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(package, asInstanceOf, isInstanceOf, <init>, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala: Set(package, TreeNodeException, asInstanceOf, isInstanceOf, <init>, ==, toString, eq, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala: Set(asInstanceOf, isInstanceOf, <init>, ==, toString, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala: Set(package, asInstanceOf, isInstanceOf, <init>, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(package, TreeNodeException, asInstanceOf, isInstanceOf, <init>, ==, !=, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala: Set(package, asInstanceOf, attachTree, isInstanceOf, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala: Set(package, TreeNodeException, asInstanceOf, isInstanceOf, <init>, ==, toString, eq, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala: Set(package, TreeNodeException, asInstanceOf, isInstanceOf, <init>, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala: Set(package, TreeNodeException, asInstanceOf, isInstanceOf, <init>, ==, toString, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(package, TreeNodeException, asInstanceOf, isInstanceOf, <init>, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala: Set(package, TreeNodeException, asInstanceOf, isInstanceOf, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(package, TreeNodeException, asInstanceOf, isInstanceOf, <init>, ==, !=, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala: Set(package, TreeNodeException, asInstanceOf, isInstanceOf, <init>, ==, clone, toString, !=, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala: Set(package, TreeNodeException, asInstanceOf, isInstanceOf, <init>, ==, toString, !=, getClass, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala: Set(package, TreeNodeException, asInstanceOf, isInstanceOf, <init>, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala: Set(package, TreeNodeException, asInstanceOf, attachTree, isInstanceOf, <init>, getMessage, ==, toString, !=, getClass, ne, eq)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, nullable, n2, simpleString, children, satisfies, clusteringSet, compatibleWith, wait, copy$default$2, $asInstanceOf, numberedTreeString, OrderedDistribution, RangePartitioning, map, productArity, equals, treeString, transformChildrenDown, argString, f1, asInstanceOf, n1, generateTreeString, childrenResolved, synchronized, EvaluatedType, nodeName, $isInstanceOf, c2, asCode, canEqual, expressions, SinglePartition, HashPartitioning, makeCopy, transformUp, productPrefix, notifyAll, readResolve, otherCopyArgs, isInstanceOf, eval, stringArgs, references, <init>, i1, mapChildren, BroadcastPartitioning, apply, flatMap, resolved, ==, fastEquals, clone, UnspecifiedDistribution, foreach, AllTuples, UnknownPartitioning, ordering, i2, copy, ClusteredDistribution, toString, Partitioning, !=, collect, getClass, copy$default$1, dataType, foldable, transformDown, Distribution, ne, eval$default$1, transform, withNewChildren, numPartitions, eq, productIterator, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2, clustering.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, unapply, unapplySeq, ruleName, curried, package, Once, name, batches, dumpDirectory, wait, $asInstanceOf, compose, productArity, equals, DumpByteCode, asInstanceOf, globalLock, log_, synchronized, $isInstanceOf, andThen, ExpressionCanonicalizer, tupled, maxIterations, logTrace, canEqual, isTraceEnabled, productPrefix, logName, notifyAll, readResolve, Strategy, FixedPoint, isInstanceOf, <init>, apply, ==, CleanExpressions, clone, strategy, copy, toString, logError, !=, rules, getClass, logWarning, Batch, copy$default$1, initializeIfNecessary, ne, eq, productIterator, log, ##, finalize, productElement, hashCode, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala: Set(unapply, package, asInstanceOf, ExpressionCanonicalizer, isInstanceOf, <init>, apply, ==, getClass, ne, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala: Set(package, asInstanceOf, ExpressionCanonicalizer, <init>, apply, ne, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala: Set(package, asInstanceOf, ExpressionCanonicalizer, <init>, apply, ==, ne, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala: Set(package, asInstanceOf, ExpressionCanonicalizer, <init>, apply, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(unapply, package, asInstanceOf, globalLock, synchronized, isInstanceOf, <init>, apply, ==, toString, !=, getClass, ne, eq, log, logInfo)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, nullable, n2, simpleString, children, wait, $asInstanceOf, numberedTreeString, map, productArity, equals, treeString, transformChildrenDown, argString, f1, asInstanceOf, n1, generateTreeString, childrenResolved, synchronized, EvaluatedType, nodeName, $isInstanceOf, c2, asCode, canEqual, makeCopy, transformUp, productPrefix, notifyAll, otherCopyArgs, isInstanceOf, eval, stringArgs, child, references, <init>, i1, mapChildren, apply, flatMap, resolved, ==, fastEquals, clone, Coalesce, foreach, i2, copy, toString, !=, collect, getClass, copy$default$1, dataType, foldable, transformDown, IsNotNull, ne, eval$default$1, IsNull, transform, withNewChildren, eq, productIterator, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(nullable, map, asInstanceOf, EvaluatedType, nodeName, makeCopy, isInstanceOf, eval, child, references, <init>, apply, ==, toString, !=, dataType, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, map, asInstanceOf, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, isInstanceOf, eval, child, <init>, apply, ==, toString, !=, getClass, dataType, ne, eq)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Catalog.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Catalog.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Catalog.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Catalog.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Catalog.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, lookupRelation$default$3, wait, super$tableExists, $asInstanceOf, super$lookupRelation, equals, asInstanceOf, synchronized, $isInstanceOf, processDatabaseAndTableName, OverrideCatalog, tableExists, overrides, notifyAll, unregisterAllTables, isInstanceOf, caseSensitive, <init>, ==, clone, EmptyCatalog, $init$, unregisterTable, toString, !=, getClass, registerTable, SimpleCatalog, ne, tables, eq, Catalog, ##, finalize, lookupRelation, hashCode.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(asInstanceOf, isInstanceOf, caseSensitive, <init>, ==, EmptyCatalog, !=, ne, Catalog, lookupRelation)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala)[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, ruleName, wait, $asInstanceOf, equals, asInstanceOf, log_, synchronized, $isInstanceOf, logTrace, isTraceEnabled, logName, notifyAll, isInstanceOf, NewRelationInstances, apply, ==, clone, MultiInstanceRelation, newInstance, toString, logError, !=, getClass, logWarning, initializeIfNecessary, ne, eq, log, ##, finalize, hashCode, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(asInstanceOf, isInstanceOf, apply, ==, !=, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala: Set(asInstanceOf, isInstanceOf, apply, ==, newInstance, toString, !=, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(asInstanceOf, logTrace, isInstanceOf, NewRelationInstances, apply, ==, !=, ne, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala: Set(asInstanceOf, isInstanceOf, apply, ==, MultiInstanceRelation, newInstance, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(asInstanceOf, logTrace, isInstanceOf, NewRelationInstances, apply, ==, !=, ne, logDebug)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, nullable, BitwiseNot, n2, simpleString, children, UnaryMinus, wait, BitwiseAnd, copy$default$2, $asInstanceOf, numberedTreeString, evalInternal, map, productArity, equals, treeString, transformChildrenDown, argString, Add, f1, BitwiseXor, asInstanceOf, n1, generateTreeString, childrenResolved, Remainder, Divide, synchronized, left, EvaluatedType, nodeName, Abs, $isInstanceOf, c2, asCode, canEqual, makeCopy, transformUp, productPrefix, Multiply, notifyAll, otherCopyArgs, isInstanceOf, eval, stringArgs, child, symbol, references, Sqrt, <init>, i1, mapChildren, apply, flatMap, resolved, ==, fastEquals, clone, foreach, MaxOf, i2, copy, toString, Subtract, !=, collect, getClass, copy$default$1, dataType, foldable, transformDown, ne, eval$default$1, transform, withNewChildren, eq, productIterator, right, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2, BinaryArithmetic, BitwiseOr.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(nullable, map, asInstanceOf, EvaluatedType, nodeName, makeCopy, isInstanceOf, eval, child, references, <init>, apply, ==, toString, !=, dataType, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, left, makeCopy, isInstanceOf, child, <init>, apply, resolved, ==, !=, dataType, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, map, asInstanceOf, left, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, isInstanceOf, eval, child, <init>, apply, ==, toString, !=, getClass, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala)[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, ruleName, wait, $asInstanceOf, equals, asInstanceOf, falseValues, isFloat, log_, synchronized, trueValues, FunctionArgumentConversion, intTypeToFixed, Division, $isInstanceOf, HiveTypeCoercion, logTrace, BooleanComparisons, isTraceEnabled, logName, notifyAll, CaseWhenCoercion, isInstanceOf, numericPrecedence, StringToIntegralCasts, typeCoercionRules, stringNaN, DecimalPrecision, apply, BooleanCasts, ==, ConvertNaNs, clone, $init$, PromoteStrings, PropagateTypes, toString, logError, !=, getClass, logWarning, initializeIfNecessary, ne, eq, log, WidenTypes, findTightestCommonType, ##, finalize, hashCode, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(asInstanceOf, isInstanceOf, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(asInstanceOf, HiveTypeCoercion, logTrace, isInstanceOf, typeCoercionRules, apply, ==, !=, ne, logDebug)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, simpleString, children, resolveNesting, wait, copy$default$2, $asInstanceOf, numberedTreeString, printSchema, map, productArity, equals, statistics, treeString, transformChildrenDown, schemaString, argString, asInstanceOf, transformExpressions, generateTreeString, ScriptTransformation, childrenResolved, log_, synchronized, nodeName, $isInstanceOf, logTrace, asCode, canEqual, expressions, copy$default$4, outputSet, isTraceEnabled, makeCopy, transformUp, productPrefix, resolveChildren, cleanArgs, logName, notifyAll, otherCopyArgs, missingInput, isInstanceOf, stringArgs, child, references, <init>, mapChildren, schema, transformExpressionsDown, apply, flatMap, resolved, ==, fastEquals, transformExpressionsUp, clone, sameResult, foreach, resolve, copy$default$3, copy, inputSet, toString, logError, !=, collect, getClass, script, logWarning, output, copy$default$1, initializeIfNecessary, transformDown, transformAllExpressions, ne, transform, withNewChildren, statePrefix, input, eq, productIterator, log, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, childrenResolved, logTrace, expressions, outputSet, transformUp, resolveChildren, isInstanceOf, child, references, <init>, apply, flatMap, resolved, ==, foreach, resolve, !=, collect, output, transformDown, ne, transform, input, logDebug)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/package.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/package.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/package.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/package.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/package.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, package, wait, $asInstanceOf, equals, asInstanceOf, synchronized, $isInstanceOf, notifyAll, isInstanceOf, ==, clone, toString, !=, getClass, ne, eq, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	hashSetForType, notify, rowType, unapply, expressionEvaluator, curried, toolBox, EvaluatedExpression, mutatorForType, wait, termForType, copy$default$2, $asInstanceOf, GenerateProjection, primitiveForType, productArity, equals, setColumn, asInstanceOf, mutableRowType, genericRowType, log_, curId, synchronized, bind, $isInstanceOf, create, tupled, javaSeparator, logTrace, canEqual, copy$default$4, isTraceEnabled, projectionType, productPrefix, logName, notifyAll, readResolve, cache, code, isInstanceOf, canonicalize, getColumn, <init>, mutableProjectionType, apply, freshName, accessorForType, debugLogging, primitiveTerm, ==, clone, nullTerm, copy$default$3, copy, toString, defaultPrimitive, logError, !=, getClass, logWarning, genericMutableRowType, copy$default$1, initializeIfNecessary, ne, objectTerm, eq, productIterator, log, ##, finalize, productElement, hashCode, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala)[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SpecificMutableRow.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SpecificMutableRow.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala source file has the following implicit definitions changed:[0m
[0m[[0mdebug[0m] [0m	mkOrderingOps.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following member ref dependencies of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala are invalidated:[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Rand.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SpecificMutableRow.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/complexTypes.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/package.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/sets.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala[0m
[0m[[0mdebug[0m] [0mThe following member ref dependencies of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala are invalidated:[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala[0m
[0m[[0mdebug[0m] [0mThe following member ref dependencies of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala are invalidated:[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala)[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/complexTypes.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Rand.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/sets.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/complexTypes.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Rand.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/sets.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/TreeNode.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, simpleString, children, TreeNode, wait, $asInstanceOf, numberedTreeString, map, equals, treeString, transformChildrenDown, argString, asInstanceOf, generateTreeString, BinaryNode, synchronized, UnaryNode, left, nodeName, $isInstanceOf, asCode, makeCopy, transformUp, MutableInt, i, notifyAll, otherCopyArgs, isInstanceOf, stringArgs, child, <init>, mapChildren, apply, flatMap, ==, fastEquals, clone, foreach, $init$, LeafNode, toString, !=, collect, getClass, transformDown, ne, transform, withNewChildren, eq, right, ##, finalize, transformChildrenUp, hashCode, getNodeNumbered.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(map, asInstanceOf, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, collect, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, transformUp, isInstanceOf, child, <init>, apply, flatMap, ==, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala: Set(asInstanceOf, UnaryNode, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, left, makeCopy, isInstanceOf, child, <init>, apply, ==, !=, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformUp, i, isInstanceOf, child, <init>, apply, flatMap, ==, foreach, !=, collect, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(children, map, asInstanceOf, BinaryNode, UnaryNode, left, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, !=, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala: Set(children, TreeNode, map, asInstanceOf, BinaryNode, UnaryNode, nodeName, isInstanceOf, <init>, apply, flatMap, ==, LeafNode, toString, !=, getClass, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, isInstanceOf, child, <init>, apply, flatMap, ==, !=, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, transformUp, isInstanceOf, child, <init>, apply, flatMap, ==, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(map, asInstanceOf, UnaryNode, nodeName, makeCopy, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala: Set(children, map, asInstanceOf, UnaryNode, isInstanceOf, child, <init>, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, left, makeCopy, isInstanceOf, child, <init>, apply, ==, !=, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, isInstanceOf, child, <init>, apply, flatMap, ==, !=, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, getClass, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(map, asInstanceOf, UnaryNode, nodeName, makeCopy, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, left, makeCopy, isInstanceOf, child, <init>, apply, ==, !=, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, isInstanceOf, child, <init>, apply, flatMap, ==, !=, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, getClass, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala: Set(children, map, asInstanceOf, isInstanceOf, child, <init>, apply, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(map, asInstanceOf, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, collect, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala: Set(map, asInstanceOf, i, <init>, apply, flatMap, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala: Set(children, map, asInstanceOf, i, <init>, apply, flatMap, ==, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala: Set(map, asInstanceOf, left, i, isInstanceOf, <init>, apply, ==, toString, !=, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala: Set(asInstanceOf, <init>, apply)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala: Set(map, asInstanceOf, left, i, isInstanceOf, child, <init>, apply, ==, clone, !=, right, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala: Set(children, TreeNode, map, asInstanceOf, BinaryNode, UnaryNode, nodeName, isInstanceOf, <init>, apply, flatMap, ==, LeafNode, toString, !=, getClass, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, getClass, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, isInstanceOf, child, <init>, apply, flatMap, ==, !=, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, !=, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformUp, i, isInstanceOf, child, <init>, apply, flatMap, ==, foreach, !=, collect, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala: Set(simpleString, children, TreeNode, map, treeString, asInstanceOf, makeCopy, transformUp, isInstanceOf, <init>, apply, flatMap, fastEquals, transformDown, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala: Set(map, treeString, asInstanceOf, synchronized, left, i, isInstanceOf, <init>, apply, ==, foreach, toString, !=, getClass, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala: Set(children, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, flatMap, ==, foreach, ne, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala: Set(children, map, asInstanceOf, isInstanceOf, child, <init>, apply, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(map, asInstanceOf, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, collect, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, !=, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala: Set(map, asInstanceOf, i, <init>, apply, flatMap, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, transformUp, isInstanceOf, child, <init>, apply, flatMap, ==, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala: Set(children, map, asInstanceOf, i, <init>, apply, flatMap, ==, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala: Set(map, asInstanceOf, left, i, isInstanceOf, <init>, apply, ==, toString, !=, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala: Set(asInstanceOf, isInstanceOf, <init>, apply, ==, LeafNode, toString, transform, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, ==, LeafNode, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala: Set(asInstanceOf, <init>, apply)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala: Set(asInstanceOf, UnaryNode, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala: Set(asInstanceOf, isInstanceOf, <init>, apply, ==, LeafNode, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala: Set(asInstanceOf, UnaryNode, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala: Set(children, TreeNode, map, asInstanceOf, nodeName, isInstanceOf, <init>, apply, ==, LeafNode, toString, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(map, asInstanceOf, UnaryNode, nodeName, makeCopy, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, left, makeCopy, isInstanceOf, child, <init>, apply, ==, !=, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala: Set(map, asInstanceOf, UnaryNode, makeCopy, i, isInstanceOf, child, <init>, apply, ==, toString, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformUp, i, isInstanceOf, child, <init>, apply, flatMap, ==, foreach, !=, collect, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala: Set(map, asInstanceOf, left, i, isInstanceOf, child, <init>, apply, ==, clone, !=, right, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(children, map, asInstanceOf, BinaryNode, UnaryNode, left, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, !=, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala: Set(children, TreeNode, map, asInstanceOf, BinaryNode, UnaryNode, nodeName, isInstanceOf, <init>, apply, flatMap, ==, LeafNode, toString, !=, getClass, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, isInstanceOf, child, <init>, apply, flatMap, ==, !=, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, getClass, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala: Set(children, TreeNode, asInstanceOf, BinaryNode, UnaryNode, left, i, isInstanceOf, <init>, apply, flatMap, ==, LeafNode, toString, !=, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeMap.scala: Set(map, <init>)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala: Set(asInstanceOf, isInstanceOf, child, <init>, apply, getClass, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformUp, i, isInstanceOf, child, <init>, apply, flatMap, ==, foreach, !=, collect, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, toString, getClass, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, flatMap, ==, foreach, ne, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(map, asInstanceOf, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, collect, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala: Set(asInstanceOf, left, isInstanceOf, child, <init>, ==, toString, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala: Set(asInstanceOf, UnaryNode, nodeName, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, eq, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala: Set(children, asInstanceOf, left, nodeName, isInstanceOf, child, <init>, apply, flatMap, ==, toString, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala: Set(children, map, asInstanceOf, UnaryNode, isInstanceOf, child, <init>, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformUp, i, isInstanceOf, child, <init>, apply, flatMap, ==, foreach, !=, collect, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, transformUp, isInstanceOf, child, <init>, apply, flatMap, ==, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, left, makeCopy, isInstanceOf, child, <init>, apply, ==, !=, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformUp, i, isInstanceOf, child, <init>, apply, flatMap, ==, foreach, !=, collect, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, isInstanceOf, child, <init>, apply, flatMap, ==, !=, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, isInstanceOf, child, <init>, apply, flatMap, ==, !=, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(map, asInstanceOf, UnaryNode, nodeName, makeCopy, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, isInstanceOf, child, <init>, apply, flatMap, ==, !=, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, getClass, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(map, asInstanceOf, UnaryNode, nodeName, makeCopy, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala: Set(children, asInstanceOf, left, nodeName, isInstanceOf, child, <init>, apply, flatMap, ==, toString, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, left, makeCopy, isInstanceOf, child, <init>, apply, ==, !=, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformUp, i, isInstanceOf, child, <init>, apply, flatMap, ==, foreach, !=, collect, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, isInstanceOf, child, <init>, apply, flatMap, ==, !=, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, getClass, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(children, map, asInstanceOf, BinaryNode, UnaryNode, left, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, !=, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformUp, i, isInstanceOf, child, <init>, apply, flatMap, ==, foreach, !=, collect, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala: Set(children, map, asInstanceOf, isInstanceOf, child, <init>, apply, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala: Set(map, asInstanceOf, nodeName, isInstanceOf, child, <init>, apply, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala: Set(asInstanceOf, UnaryNode, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformUp, i, isInstanceOf, child, <init>, apply, flatMap, ==, foreach, !=, collect, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala: Set(map, asInstanceOf, left, i, isInstanceOf, child, <init>, apply, ==, clone, !=, right, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(children, map, asInstanceOf, BinaryNode, UnaryNode, left, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, !=, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, transformUp, isInstanceOf, child, <init>, apply, flatMap, ==, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, left, makeCopy, isInstanceOf, child, <init>, apply, ==, !=, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformUp, i, isInstanceOf, child, <init>, apply, flatMap, ==, foreach, !=, collect, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala: Set(children, TreeNode, map, asInstanceOf, BinaryNode, UnaryNode, nodeName, isInstanceOf, <init>, apply, flatMap, ==, LeafNode, toString, !=, getClass, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, isInstanceOf, child, <init>, apply, flatMap, ==, !=, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, isInstanceOf, child, <init>, apply, flatMap, ==, !=, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, getClass, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Catalog.scala: Set(map, isInstanceOf, <init>, ==, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, transformUp, isInstanceOf, child, <init>, apply, flatMap, ==, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, left, makeCopy, isInstanceOf, child, <init>, apply, ==, !=, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformUp, i, isInstanceOf, child, <init>, apply, flatMap, ==, foreach, !=, collect, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, isInstanceOf, child, <init>, apply, flatMap, ==, !=, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(map, asInstanceOf, UnaryNode, nodeName, makeCopy, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, left, makeCopy, isInstanceOf, child, <init>, apply, ==, !=, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, isInstanceOf, child, <init>, apply, flatMap, ==, !=, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, getClass, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Catalog.scala: Set(map, isInstanceOf, <init>, ==, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(map, asInstanceOf, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, collect, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, toString, getClass, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, transformUp, isInstanceOf, child, <init>, apply, flatMap, ==, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, ==, LeafNode, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/QueryPlanner.scala: Set(TreeNode, <init>, apply, flatMap)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala: Set(asInstanceOf, UnaryNode, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala: Set(asInstanceOf, isInstanceOf, <init>, apply, ==, LeafNode, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala: Set(asInstanceOf, UnaryNode, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala: Set(children, TreeNode, map, asInstanceOf, nodeName, isInstanceOf, <init>, apply, ==, LeafNode, toString, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, collect, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, left, makeCopy, isInstanceOf, child, <init>, apply, ==, !=, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformUp, i, isInstanceOf, child, <init>, apply, flatMap, ==, foreach, !=, collect, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(children, map, asInstanceOf, BinaryNode, UnaryNode, left, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, !=, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, isInstanceOf, child, <init>, apply, flatMap, ==, !=, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, getClass, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala: Set(simpleString, children, TreeNode, map, treeString, asInstanceOf, makeCopy, transformUp, isInstanceOf, <init>, apply, flatMap, fastEquals, transformDown, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala: Set(map, treeString, asInstanceOf, synchronized, left, i, isInstanceOf, <init>, apply, ==, foreach, toString, !=, getClass, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala: Set(children, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, flatMap, ==, foreach, ne, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala: Set(children, map, asInstanceOf, isInstanceOf, child, <init>, apply, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(map, asInstanceOf, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, collect, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala: Set(map, asInstanceOf, i, <init>, apply, flatMap, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, transformUp, isInstanceOf, child, <init>, apply, flatMap, ==, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala: Set(children, map, asInstanceOf, i, <init>, apply, flatMap, ==, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala: Set(map, asInstanceOf, left, i, isInstanceOf, <init>, apply, ==, toString, !=, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala: Set(asInstanceOf, left, isInstanceOf, child, <init>, ==, toString, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala: Set(asInstanceOf, isInstanceOf, <init>, apply, ==, LeafNode, toString, transform, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, ==, LeafNode, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala: Set(asInstanceOf, <init>, apply)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala: Set(asInstanceOf, UnaryNode, nodeName, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, eq, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala: Set(asInstanceOf, UnaryNode, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala: Set(map, asInstanceOf, nodeName, isInstanceOf, child, <init>, apply, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala: Set(asInstanceOf, UnaryNode, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala: Set(children, TreeNode, map, asInstanceOf, nodeName, isInstanceOf, <init>, apply, ==, LeafNode, toString, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(map, asInstanceOf, UnaryNode, nodeName, makeCopy, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala: Set(children, asInstanceOf, left, nodeName, isInstanceOf, child, <init>, apply, flatMap, ==, toString, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala: Set(children, map, asInstanceOf, UnaryNode, isInstanceOf, child, <init>, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/FunctionRegistry.scala: Set(children, map, <init>, apply)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, left, makeCopy, isInstanceOf, child, <init>, apply, ==, !=, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala: Set(children, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala: Set(map, asInstanceOf, UnaryNode, makeCopy, i, isInstanceOf, child, <init>, apply, ==, toString, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala: Set(asInstanceOf, UnaryNode, nodeName, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/complexTypes.scala: Set(children, map, asInstanceOf, isInstanceOf, child, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformUp, i, isInstanceOf, child, <init>, apply, flatMap, ==, foreach, !=, collect, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala: Set(map, asInstanceOf, left, i, isInstanceOf, child, <init>, apply, ==, clone, !=, right, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala: Set(asInstanceOf, isInstanceOf, child, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(children, map, asInstanceOf, BinaryNode, UnaryNode, left, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, !=, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala: Set(map, asInstanceOf, i, isInstanceOf, child, <init>, apply, ==, clone, toString, !=, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala: Set(children, TreeNode, map, asInstanceOf, BinaryNode, UnaryNode, nodeName, isInstanceOf, <init>, apply, flatMap, ==, LeafNode, toString, !=, getClass, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, isInstanceOf, child, <init>, apply, flatMap, ==, !=, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, getClass, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Rand.scala: Set(asInstanceOf, <init>, toString)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/sets.scala: Set(asInstanceOf, left, isInstanceOf, child, <init>, apply, ==, toString, !=, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala: Set(asInstanceOf, isInstanceOf, child, <init>, apply, getClass, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala: Set(simpleString, children, TreeNode, map, treeString, asInstanceOf, makeCopy, transformUp, isInstanceOf, <init>, apply, flatMap, fastEquals, transformDown, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(map, asInstanceOf, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, collect, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, transformUp, isInstanceOf, child, <init>, apply, flatMap, ==, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/Rule.scala: Set(TreeNode, <init>, getClass)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala: Set(asInstanceOf, left, isInstanceOf, child, <init>, ==, toString, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala: Set(asInstanceOf, isInstanceOf, <init>, apply, ==, LeafNode, toString, transform, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/QueryPlanner.scala: Set(TreeNode, <init>, apply, flatMap)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, i, isInstanceOf, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala: Set(asInstanceOf, UnaryNode, nodeName, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, eq, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala: Set(map, asInstanceOf, nodeName, isInstanceOf, child, <init>, apply, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala: Set(asInstanceOf, UnaryNode, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala: Set(children, TreeNode, map, asInstanceOf, nodeName, isInstanceOf, <init>, apply, ==, LeafNode, toString, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, collect, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(map, asInstanceOf, UnaryNode, nodeName, makeCopy, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala: Set(children, asInstanceOf, left, nodeName, isInstanceOf, child, <init>, apply, flatMap, ==, toString, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/errors/package.scala: Set(TreeNode, treeString, <init>, toString)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala: Set(children, map, asInstanceOf, UnaryNode, isInstanceOf, child, <init>, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, left, makeCopy, isInstanceOf, child, <init>, apply, ==, !=, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala: Set(map, asInstanceOf, UnaryNode, makeCopy, i, isInstanceOf, child, <init>, apply, ==, toString, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala: Set(asInstanceOf, UnaryNode, nodeName, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformUp, i, isInstanceOf, child, <init>, apply, flatMap, ==, foreach, !=, collect, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(children, map, asInstanceOf, BinaryNode, UnaryNode, left, isInstanceOf, child, <init>, apply, ==, LeafNode, toString, !=, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala: Set(children, TreeNode, map, asInstanceOf, BinaryNode, UnaryNode, nodeName, isInstanceOf, <init>, apply, flatMap, ==, LeafNode, toString, !=, getClass, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, isInstanceOf, child, <init>, apply, flatMap, ==, !=, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, i, isInstanceOf, child, <init>, apply, ==, toString, !=, getClass, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/package.scala: Set(TreeNode, asInstanceOf, isInstanceOf, <init>, ==, eq, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala: Set(TreeNode, treeString, asInstanceOf, isInstanceOf, <init>, apply, ==, fastEquals, foreach, toString, !=, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala: Set(children, TreeNode, asInstanceOf, BinaryNode, UnaryNode, left, i, isInstanceOf, <init>, apply, flatMap, ==, LeafNode, toString, !=, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala: Set(asInstanceOf, isInstanceOf, child, <init>, apply, getClass, transform)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/QueryPlanner.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/QueryPlanner.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/QueryPlanner.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/QueryPlanner.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/QueryPlanner.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, GenericStrategy, wait, $asInstanceOf, equals, asInstanceOf, log_, synchronized, QueryPlanner, $isInstanceOf, logTrace, isTraceEnabled, logName, notifyAll, isInstanceOf, <init>, apply, ==, clone, planLater, toString, strategies, logError, !=, getClass, logWarning, initializeIfNecessary, ne, eq, log, ##, finalize, hashCode, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/Metadata.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/Metadata.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/Metadata.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/Metadata.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/Metadata.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, Metadata, wait, getMetadata, $asInstanceOf, empty, map, equals, json, putLong, getDoubleArray, asInstanceOf, getDouble, toJsonValue, putBoolean, getString, synchronized, $isInstanceOf, putString, build, putMetadata, putDouble, getMap, notifyAll, readResolve, putMetadataArray, putStringArray, isInstanceOf, getLongArray, hash, <init>, putLongArray, putBooleanArray, ==, clone, fromJObject, put, toString, fromJson, getBoolean, getMetadataArray, !=, get, MetadataBuilder, getClass, withMetadata, contains, getStringArray, ne, getBooleanArray, jsonValue, eq, ##, finalize, getLong, hashCode, putDoubleArray.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala: Set(Metadata, empty, map, json, asInstanceOf, synchronized, build, isInstanceOf, <init>, ==, fromJObject, toString, !=, get, getClass, contains, ne, jsonValue, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala: Set(map, asInstanceOf, build, isInstanceOf, <init>, ==, toString, !=, get, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(empty, map, asInstanceOf, isInstanceOf, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala: Set(Metadata, empty, asInstanceOf, isInstanceOf, <init>, ==, toString, eq, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala: Set(empty, asInstanceOf, isInstanceOf, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala: Set(map, asInstanceOf, isInstanceOf, <init>, ==, toString, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala: Set(Metadata, asInstanceOf, isInstanceOf, <init>, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala)[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/complexTypes.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Rand.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/sets.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/complexTypes.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Rand.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/sets.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	UnaryExpression, notify, nullable, n2, simpleString, children, wait, LeafExpression, $asInstanceOf, numberedTreeString, map, productArity, equals, treeString, transformChildrenDown, argString, f1, asInstanceOf, n1, generateTreeString, childrenResolved, synchronized, left, EvaluatedType, nodeName, $isInstanceOf, Expression, c2, GroupExpression, asCode, canEqual, makeCopy, transformUp, productPrefix, notifyAll, otherCopyArgs, isInstanceOf, eval, stringArgs, child, symbol, references, <init>, i1, mapChildren, apply, flatMap, resolved, ==, fastEquals, clone, foreach, BinaryExpression, i2, copy, toString, !=, collect, getClass, copy$default$1, dataType, foldable, transformDown, ne, eval$default$1, transform, withNewChildren, eq, productIterator, right, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, Expression, transformUp, isInstanceOf, child, <init>, apply, flatMap, ==, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, Expression, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(nullable, map, asInstanceOf, EvaluatedType, nodeName, Expression, makeCopy, isInstanceOf, eval, child, references, <init>, apply, ==, toString, !=, dataType, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala: Set(nullable, children, map, asInstanceOf, childrenResolved, Expression, isInstanceOf, eval, child, <init>, resolved, ==, toString, !=, dataType, foldable, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, left, Expression, makeCopy, isInstanceOf, child, <init>, apply, resolved, ==, !=, dataType, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, map, asInstanceOf, left, Expression, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, Expression, isInstanceOf, eval, child, <init>, apply, ==, toString, !=, getClass, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, Expression, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(nullable, map, asInstanceOf, EvaluatedType, nodeName, Expression, makeCopy, isInstanceOf, eval, child, references, <init>, apply, ==, toString, !=, dataType, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, left, Expression, makeCopy, isInstanceOf, child, <init>, apply, resolved, ==, !=, dataType, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, map, asInstanceOf, left, Expression, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, Expression, isInstanceOf, eval, child, <init>, apply, ==, toString, !=, getClass, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala: Set(children, map, asInstanceOf, isInstanceOf, eval, child, <init>, apply, ==, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(UnaryExpression, nullable, map, asInstanceOf, childrenResolved, left, Expression, c2, isInstanceOf, eval, child, references, <init>, apply, resolved, ==, BinaryExpression, toString, !=, collect, dataType, foldable, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala: Set(map, asInstanceOf, Expression, eval, <init>, apply, flatMap, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala: Set(children, map, asInstanceOf, Expression, eval, <init>, apply, flatMap, ==, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala: Set(map, asInstanceOf, left, Expression, isInstanceOf, eval, <init>, apply, ==, toString, !=, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala: Set(asInstanceOf, Expression, eval, <init>, apply)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala: Set(map, asInstanceOf, left, isInstanceOf, eval, child, <init>, apply, ==, clone, !=, dataType, right, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala: Set(children, map, asInstanceOf, childrenResolved, nodeName, Expression, isInstanceOf, <init>, apply, flatMap, resolved, ==, toString, !=, getClass, dataType, ne, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, Expression, isInstanceOf, eval, child, <init>, apply, ==, toString, !=, getClass, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala: Set(simpleString, children, map, treeString, asInstanceOf, Expression, makeCopy, transformUp, isInstanceOf, references, <init>, apply, flatMap, fastEquals, transformDown, transform, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala: Set(nullable, map, treeString, asInstanceOf, synchronized, left, Expression, isInstanceOf, <init>, apply, ==, foreach, toString, !=, getClass, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala: Set(children, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala: Set(map, asInstanceOf, Expression, isInstanceOf, references, <init>, apply, flatMap, ==, foreach, ne, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala: Set(children, map, asInstanceOf, isInstanceOf, eval, child, <init>, apply, ==, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(UnaryExpression, nullable, map, asInstanceOf, childrenResolved, left, Expression, c2, isInstanceOf, eval, child, references, <init>, apply, resolved, ==, BinaryExpression, toString, !=, collect, dataType, foldable, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala: Set(nullable, map, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, !=, dataType, ne, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala: Set(map, asInstanceOf, Expression, eval, <init>, apply, flatMap, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, Expression, transformUp, isInstanceOf, child, <init>, apply, flatMap, ==, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala: Set(children, map, asInstanceOf, Expression, eval, <init>, apply, flatMap, ==, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala: Set(map, asInstanceOf, left, Expression, isInstanceOf, eval, <init>, apply, ==, toString, !=, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala: Set(nullable, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, transform, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala: Set(asInstanceOf, Expression, eval, <init>, apply)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, Expression, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala: Set(asInstanceOf, Expression, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala: Set(asInstanceOf, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala: Set(asInstanceOf, Expression, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala: Set(children, map, asInstanceOf, EvaluatedType, nodeName, Expression, isInstanceOf, <init>, apply, resolved, ==, toString, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(nullable, map, asInstanceOf, EvaluatedType, nodeName, Expression, makeCopy, isInstanceOf, eval, child, references, <init>, apply, ==, toString, !=, dataType, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, left, Expression, makeCopy, isInstanceOf, child, <init>, apply, resolved, ==, !=, dataType, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala: Set(nullable, map, asInstanceOf, Expression, makeCopy, isInstanceOf, eval, child, <init>, apply, resolved, ==, copy, toString, dataType, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, Expression, GroupExpression, transformUp, isInstanceOf, child, references, <init>, apply, flatMap, resolved, ==, foreach, !=, collect, dataType, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala: Set(map, asInstanceOf, left, isInstanceOf, eval, child, <init>, apply, ==, clone, !=, dataType, right, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(children, map, asInstanceOf, childrenResolved, left, Expression, GroupExpression, isInstanceOf, eval, child, <init>, apply, resolved, ==, toString, !=, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala: Set(children, map, asInstanceOf, childrenResolved, nodeName, Expression, isInstanceOf, <init>, apply, flatMap, resolved, ==, toString, !=, getClass, dataType, ne, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, map, asInstanceOf, left, Expression, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, Expression, isInstanceOf, eval, child, <init>, apply, ==, toString, !=, getClass, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala: Set(UnaryExpression, children, LeafExpression, asInstanceOf, childrenResolved, left, EvaluatedType, Expression, GroupExpression, isInstanceOf, eval, symbol, references, <init>, apply, flatMap, resolved, ==, BinaryExpression, toString, !=, dataType, foldable, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeMap.scala: Set(map, <init>)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala: Set(asInstanceOf, Expression, isInstanceOf, child, <init>, apply, getClass, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala: Set(map, asInstanceOf, Expression, isInstanceOf, references, <init>, apply, flatMap, ==, foreach, ne, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(UnaryExpression, nullable, map, asInstanceOf, childrenResolved, left, Expression, c2, isInstanceOf, eval, child, references, <init>, apply, resolved, ==, BinaryExpression, toString, !=, collect, dataType, foldable, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala: Set(UnaryExpression, nullable, n2, f1, asInstanceOf, n1, left, EvaluatedType, Expression, isInstanceOf, eval, child, <init>, i1, resolved, ==, BinaryExpression, toString, dataType, foldable, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, Expression, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala: Set(nullable, asInstanceOf, EvaluatedType, nodeName, Expression, isInstanceOf, eval, child, <init>, apply, resolved, ==, toString, dataType, eq, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala: Set(UnaryExpression, nullable, children, asInstanceOf, left, nodeName, Expression, isInstanceOf, eval, child, <init>, apply, flatMap, resolved, ==, BinaryExpression, toString, dataType, foldable, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala: Set(nullable, children, map, asInstanceOf, childrenResolved, Expression, isInstanceOf, eval, child, <init>, resolved, ==, toString, !=, dataType, foldable, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, Expression, GroupExpression, transformUp, isInstanceOf, child, references, <init>, apply, flatMap, resolved, ==, foreach, !=, collect, dataType, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, Expression, transformUp, isInstanceOf, child, <init>, apply, flatMap, ==, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, Expression, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, left, Expression, makeCopy, isInstanceOf, child, <init>, apply, resolved, ==, !=, dataType, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, Expression, GroupExpression, transformUp, isInstanceOf, child, references, <init>, apply, flatMap, resolved, ==, foreach, !=, collect, dataType, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, map, asInstanceOf, left, Expression, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, map, asInstanceOf, left, Expression, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, Expression, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, Expression, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(nullable, map, asInstanceOf, EvaluatedType, nodeName, Expression, makeCopy, isInstanceOf, eval, child, references, <init>, apply, ==, toString, !=, dataType, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, map, asInstanceOf, left, Expression, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, Expression, isInstanceOf, eval, child, <init>, apply, ==, toString, !=, getClass, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, Expression, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(nullable, map, asInstanceOf, EvaluatedType, nodeName, Expression, makeCopy, isInstanceOf, eval, child, references, <init>, apply, ==, toString, !=, dataType, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala: Set(UnaryExpression, nullable, children, asInstanceOf, left, nodeName, Expression, isInstanceOf, eval, child, <init>, apply, flatMap, resolved, ==, BinaryExpression, toString, dataType, foldable, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, left, Expression, makeCopy, isInstanceOf, child, <init>, apply, resolved, ==, !=, dataType, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, Expression, GroupExpression, transformUp, isInstanceOf, child, references, <init>, apply, flatMap, resolved, ==, foreach, !=, collect, dataType, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, map, asInstanceOf, left, Expression, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, Expression, isInstanceOf, eval, child, <init>, apply, ==, toString, !=, getClass, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(children, map, asInstanceOf, childrenResolved, left, Expression, GroupExpression, isInstanceOf, eval, child, <init>, apply, resolved, ==, toString, !=, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, Expression, GroupExpression, transformUp, isInstanceOf, child, references, <init>, apply, flatMap, resolved, ==, foreach, !=, collect, dataType, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala: Set(children, map, asInstanceOf, isInstanceOf, eval, child, <init>, apply, ==, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, Expression, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala: Set(map, asInstanceOf, EvaluatedType, nodeName, Expression, isInstanceOf, child, <init>, apply, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala: Set(asInstanceOf, Expression, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, Expression, GroupExpression, transformUp, isInstanceOf, child, references, <init>, apply, flatMap, resolved, ==, foreach, !=, collect, dataType, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala: Set(map, asInstanceOf, left, isInstanceOf, eval, child, <init>, apply, ==, clone, !=, dataType, right, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(children, map, asInstanceOf, childrenResolved, left, Expression, GroupExpression, isInstanceOf, eval, child, <init>, apply, resolved, ==, toString, !=, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, Expression, transformUp, isInstanceOf, child, <init>, apply, flatMap, ==, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, Expression, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, left, Expression, makeCopy, isInstanceOf, child, <init>, apply, resolved, ==, !=, dataType, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, Expression, GroupExpression, transformUp, isInstanceOf, child, references, <init>, apply, flatMap, resolved, ==, foreach, !=, collect, dataType, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala: Set(children, map, asInstanceOf, childrenResolved, nodeName, Expression, isInstanceOf, <init>, apply, flatMap, resolved, ==, toString, !=, getClass, dataType, ne, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, map, asInstanceOf, left, Expression, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, map, asInstanceOf, left, Expression, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, Expression, isInstanceOf, eval, child, <init>, apply, ==, toString, !=, getClass, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, Expression, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(nullable, map, asInstanceOf, EvaluatedType, nodeName, Expression, makeCopy, isInstanceOf, eval, child, references, <init>, apply, ==, toString, !=, dataType, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, left, Expression, makeCopy, isInstanceOf, child, <init>, apply, resolved, ==, !=, dataType, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, map, asInstanceOf, left, Expression, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, Expression, isInstanceOf, eval, child, <init>, apply, ==, toString, !=, getClass, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, Expression, isInstanceOf, eval, child, <init>, apply, ==, toString, !=, getClass, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala: Set(simpleString, children, map, treeString, asInstanceOf, Expression, makeCopy, transformUp, isInstanceOf, references, <init>, apply, flatMap, fastEquals, transformDown, transform, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala: Set(nullable, map, treeString, asInstanceOf, synchronized, left, Expression, isInstanceOf, <init>, apply, ==, foreach, toString, !=, getClass, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala: Set(children, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala: Set(map, asInstanceOf, Expression, isInstanceOf, references, <init>, apply, flatMap, ==, foreach, ne, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala: Set(children, map, asInstanceOf, isInstanceOf, eval, child, <init>, apply, ==, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(UnaryExpression, nullable, map, asInstanceOf, childrenResolved, left, Expression, c2, isInstanceOf, eval, child, references, <init>, apply, resolved, ==, BinaryExpression, toString, !=, collect, dataType, foldable, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala: Set(map, asInstanceOf, Expression, eval, <init>, apply, flatMap, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, Expression, transformUp, isInstanceOf, child, <init>, apply, flatMap, ==, collect, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala: Set(children, map, asInstanceOf, Expression, eval, <init>, apply, flatMap, ==, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala: Set(map, asInstanceOf, left, Expression, isInstanceOf, eval, <init>, apply, ==, toString, !=, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala: Set(UnaryExpression, nullable, n2, f1, asInstanceOf, n1, left, EvaluatedType, Expression, isInstanceOf, eval, child, <init>, i1, resolved, ==, BinaryExpression, toString, dataType, foldable, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala: Set(nullable, asInstanceOf, Expression, isInstanceOf, <init>, apply, ==, toString, dataType, transform, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala: Set(asInstanceOf, Expression, eval, <init>, apply)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, Expression, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala: Set(nullable, asInstanceOf, EvaluatedType, nodeName, Expression, isInstanceOf, eval, child, <init>, apply, resolved, ==, toString, dataType, eq, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala: Set(asInstanceOf, Expression, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala: Set(map, asInstanceOf, EvaluatedType, nodeName, Expression, isInstanceOf, child, <init>, apply, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala: Set(asInstanceOf, Expression, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala: Set(children, map, asInstanceOf, EvaluatedType, nodeName, Expression, isInstanceOf, <init>, apply, resolved, ==, toString, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(nullable, map, asInstanceOf, EvaluatedType, nodeName, Expression, makeCopy, isInstanceOf, eval, child, references, <init>, apply, ==, toString, !=, dataType, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala: Set(UnaryExpression, nullable, children, asInstanceOf, left, nodeName, Expression, isInstanceOf, eval, child, <init>, apply, flatMap, resolved, ==, BinaryExpression, toString, dataType, foldable, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala: Set(nullable, children, map, asInstanceOf, childrenResolved, Expression, isInstanceOf, eval, child, <init>, resolved, ==, toString, !=, dataType, foldable, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/FunctionRegistry.scala: Set(children, map, Expression, <init>, apply)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, left, Expression, makeCopy, isInstanceOf, child, <init>, apply, resolved, ==, !=, dataType, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala: Set(nullable, LeafExpression, map, asInstanceOf, Expression, isInstanceOf, eval, <init>, apply, ==, toString, !=, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala: Set(children, asInstanceOf, Expression, isInstanceOf, eval, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala: Set(nullable, map, asInstanceOf, Expression, makeCopy, isInstanceOf, eval, child, <init>, apply, resolved, ==, copy, toString, dataType, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala: Set(nullable, asInstanceOf, EvaluatedType, nodeName, Expression, isInstanceOf, child, <init>, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/complexTypes.scala: Set(UnaryExpression, nullable, children, map, asInstanceOf, childrenResolved, Expression, isInstanceOf, eval, child, <init>, apply, resolved, ==, toString, dataType, foldable, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, Expression, GroupExpression, transformUp, isInstanceOf, child, references, <init>, apply, flatMap, resolved, ==, foreach, !=, collect, dataType, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala: Set(map, asInstanceOf, left, isInstanceOf, eval, child, <init>, apply, ==, clone, !=, dataType, right, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala: Set(UnaryExpression, nullable, asInstanceOf, Expression, isInstanceOf, eval, child, <init>, apply, ==, toString, foldable, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(children, map, asInstanceOf, childrenResolved, left, Expression, GroupExpression, isInstanceOf, eval, child, <init>, apply, resolved, ==, toString, !=, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala: Set(UnaryExpression, nullable, map, asInstanceOf, childrenResolved, Expression, isInstanceOf, eval, child, <init>, apply, resolved, ==, clone, toString, !=, dataType, foldable, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala: Set(children, map, asInstanceOf, childrenResolved, nodeName, Expression, isInstanceOf, <init>, apply, flatMap, resolved, ==, toString, !=, getClass, dataType, ne, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, map, asInstanceOf, left, Expression, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, left, Expression, isInstanceOf, eval, child, <init>, apply, ==, toString, !=, getClass, dataType, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Rand.scala: Set(LeafExpression, asInstanceOf, EvaluatedType, <init>, toString)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/sets.scala: Set(UnaryExpression, nullable, LeafExpression, asInstanceOf, left, Expression, isInstanceOf, eval, child, <init>, apply, ==, BinaryExpression, toString, !=, dataType, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala: Set(asInstanceOf, Expression, isInstanceOf, child, <init>, apply, getClass, transform)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, unapply, unapplySeq, ruleName, curried, Once, name, batches, buildRewrites, wait, LikeSimplification, $asInstanceOf, compose, NullPropagation, productArity, equals, canEvaluate, startsWith, asInstanceOf, prunedChild, log_, synchronized, splitDisjunctivePredicates, Optimizer, $isInstanceOf, andThen, SimplifyCasts, UnionPushdown, tupled, PushPredicateThroughProject, CombineLimits, maxIterations, logTrace, canEqual, OptimizeIn, isTraceEnabled, splitConjunctivePredicates, productPrefix, BooleanSimplification, DecimalAggregates, logName, notifyAll, readResolve, Strategy, SimplifyCaseConversionExpressions, FixedPoint, MAX_DOUBLE_DIGITS, isInstanceOf, endsWith, <init>, apply, pushToRight, ==, split, clone, strategy, ColumnPruning, DefaultOptimizer, copy, toString, equalTo, logError, !=, rules, getClass, logWarning, Batch, copy$default$1, replaceAlias, PushPredicateThroughJoin, initializeIfNecessary, SimplifyFilters, contains, ne, ConstantFolding, eq, productIterator, log, ##, finalize, productElement, hashCode, logDebug, CombineFilters, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala)[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	Statistics, notify, simpleString, children, resolveNesting, wait, $asInstanceOf, numberedTreeString, printSchema, map, productArity, equals, statistics, treeString, transformChildrenDown, schemaString, argString, asInstanceOf, transformExpressions, generateTreeString, BinaryNode, childrenResolved, log_, synchronized, UnaryNode, left, nodeName, $isInstanceOf, logTrace, asCode, canEqual, expressions, outputSet, isTraceEnabled, makeCopy, transformUp, productPrefix, resolveChildren, cleanArgs, logName, notifyAll, otherCopyArgs, missingInput, isInstanceOf, stringArgs, child, LogicalPlan, references, <init>, mapChildren, schema, transformExpressionsDown, apply, flatMap, resolved, ==, fastEquals, transformExpressionsUp, clone, sameResult, foreach, resolve, sizeInBytes, LeafNode, copy, inputSet, toString, logError, !=, collect, getClass, logWarning, output, copy$default$1, initializeIfNecessary, transformDown, transformAllExpressions, ne, transform, withNewChildren, statePrefix, eq, productIterator, log, right, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, expressions, outputSet, isInstanceOf, child, LogicalPlan, references, <init>, transformExpressionsDown, apply, flatMap, ==, transformExpressionsUp, !=, collect, output, transformAllExpressions, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala: Set(map, asInstanceOf, expressions, isInstanceOf, <init>, schema, apply, ==, toString, !=, output, ne, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, childrenResolved, logTrace, expressions, outputSet, transformUp, resolveChildren, isInstanceOf, child, LogicalPlan, references, <init>, apply, flatMap, resolved, ==, foreach, resolve, !=, collect, output, transformDown, ne, transform, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, childrenResolved, logTrace, expressions, outputSet, transformUp, resolveChildren, isInstanceOf, child, LogicalPlan, references, <init>, apply, flatMap, resolved, ==, foreach, resolve, !=, collect, output, transformDown, ne, transform, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala: Set(map, asInstanceOf, isInstanceOf, LogicalPlan, <init>, apply, flatMap, ==, toString, getClass, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala: Set(map, asInstanceOf, expressions, isInstanceOf, references, <init>, apply, flatMap, ==, foreach, ne, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(map, asInstanceOf, childrenResolved, left, expressions, outputSet, isInstanceOf, child, LogicalPlan, references, <init>, apply, resolved, ==, toString, !=, collect, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, expressions, isInstanceOf, LogicalPlan, <init>, apply, ==, toString, output, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala: Set(asInstanceOf, left, expressions, isInstanceOf, child, <init>, resolved, ==, toString, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, expressions, isInstanceOf, LogicalPlan, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala: Set(asInstanceOf, UnaryNode, nodeName, expressions, isInstanceOf, child, <init>, apply, resolved, ==, LeafNode, toString, eq, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala: Set(children, asInstanceOf, left, nodeName, expressions, isInstanceOf, child, <init>, apply, flatMap, resolved, ==, toString, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala: Set(children, map, asInstanceOf, childrenResolved, UnaryNode, expressions, isInstanceOf, child, <init>, resolved, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, childrenResolved, logTrace, expressions, outputSet, transformUp, resolveChildren, isInstanceOf, child, LogicalPlan, references, <init>, apply, flatMap, resolved, ==, foreach, resolve, !=, collect, output, transformDown, ne, transform, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Catalog.scala: Set(map, isInstanceOf, LogicalPlan, <init>, ==, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, expressions, transformUp, isInstanceOf, child, LogicalPlan, <init>, apply, flatMap, ==, collect, output, ne, transform, right, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, expressions, isInstanceOf, LogicalPlan, <init>, apply, ==, toString, output, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, expressions, isInstanceOf, LogicalPlan, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, childrenResolved, left, expressions, makeCopy, isInstanceOf, child, LogicalPlan, <init>, apply, resolved, ==, inputSet, !=, output, transformAllExpressions, ne, transform, right, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, childrenResolved, logTrace, expressions, outputSet, transformUp, resolveChildren, isInstanceOf, child, LogicalPlan, references, <init>, apply, flatMap, resolved, ==, foreach, resolve, !=, collect, output, transformDown, ne, transform, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, expressions, outputSet, isInstanceOf, child, LogicalPlan, references, <init>, transformExpressionsDown, apply, flatMap, ==, transformExpressionsUp, !=, collect, output, transformAllExpressions, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Catalog.scala: Set(map, isInstanceOf, LogicalPlan, <init>, ==, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(map, asInstanceOf, childrenResolved, left, expressions, outputSet, isInstanceOf, child, LogicalPlan, references, <init>, apply, resolved, ==, toString, !=, collect, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala: Set(map, asInstanceOf, isInstanceOf, LogicalPlan, <init>, apply, flatMap, ==, toString, getClass, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, expressions, transformUp, isInstanceOf, child, LogicalPlan, <init>, apply, flatMap, ==, collect, output, ne, transform, right, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(map, asInstanceOf, expressions, isInstanceOf, LogicalPlan, <init>, apply, ==, toString, output, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala: Set(map, asInstanceOf, expressions, isInstanceOf, LogicalPlan, <init>, apply, ==, LeafNode, toString, output, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/QueryPlanner.scala: Set(LogicalPlan, <init>, apply, flatMap)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, expressions, isInstanceOf, LogicalPlan, <init>, apply, flatMap, ==, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala: Set(asInstanceOf, UnaryNode, expressions, isInstanceOf, child, LogicalPlan, <init>, ==, toString, output, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala: Set(asInstanceOf, expressions, isInstanceOf, LogicalPlan, <init>, apply, ==, LeafNode, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala: Set(asInstanceOf, UnaryNode, expressions, isInstanceOf, child, LogicalPlan, <init>, ==, toString, output, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala: Set(children, map, asInstanceOf, nodeName, expressions, isInstanceOf, <init>, apply, resolved, ==, LeafNode, toString, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/MultiInstanceRelation.scala: Set(map, asInstanceOf, isInstanceOf, LogicalPlan, <init>, apply, collect, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, childrenResolved, left, expressions, makeCopy, isInstanceOf, child, LogicalPlan, <init>, apply, resolved, ==, inputSet, !=, output, transformAllExpressions, ne, transform, right, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, childrenResolved, logTrace, expressions, outputSet, transformUp, resolveChildren, isInstanceOf, child, LogicalPlan, references, <init>, apply, flatMap, resolved, ==, foreach, resolve, !=, collect, output, transformDown, ne, transform, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(Statistics, children, map, statistics, asInstanceOf, BinaryNode, childrenResolved, UnaryNode, left, expressions, isInstanceOf, child, LogicalPlan, <init>, apply, resolved, ==, sizeInBytes, LeafNode, toString, !=, output, ne, eq, right)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, expressions, outputSet, isInstanceOf, child, LogicalPlan, references, <init>, transformExpressionsDown, apply, flatMap, ==, transformExpressionsUp, !=, collect, output, transformAllExpressions, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/sets.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/sets.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/sets.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/sets.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/sets.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	CountSet, notify, nullable, CombineSets, n2, simpleString, children, wait, copy$default$2, $asInstanceOf, numberedTreeString, map, productArity, equals, treeString, transformChildrenDown, argString, f1, asInstanceOf, AddItemToSet, n1, generateTreeString, childrenResolved, set, synchronized, left, EvaluatedType, nodeName, $isInstanceOf, c2, asCode, canEqual, makeCopy, transformUp, NewSet, productPrefix, notifyAll, otherCopyArgs, isInstanceOf, eval, stringArgs, child, symbol, references, <init>, i1, mapChildren, apply, flatMap, resolved, ==, fastEquals, clone, foreach, i2, copy, toString, !=, collect, getClass, copy$default$1, dataType, foldable, transformDown, ne, eval$default$1, elementType, transform, withNewChildren, eq, productIterator, right, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2, item.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, set, synchronized, left, isInstanceOf, eval, child, <init>, apply, ==, toString, !=, getClass, dataType, ne, elementType, eq, right, item)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/package.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/package.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/package.scala)[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/package.scala[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/package.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/package.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, package, wait, $asInstanceOf, compose, equals, asInstanceOf, synchronized, $isInstanceOf, andThen, notifyAll, isInstanceOf, MutableProjection, <init>, apply, ==, clone, toString, target, !=, getClass, ne, currentValue, eq, ##, finalize, hashCode, Projection.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala: Set(package, asInstanceOf, <init>, apply, ==, ne, Projection)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala: Set(package, asInstanceOf, isInstanceOf, MutableProjection, <init>, apply, ==, toString, !=, eq, Projection)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala: Set(package, asInstanceOf, MutableProjection, <init>, apply, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(package, asInstanceOf, synchronized, isInstanceOf, MutableProjection, <init>, apply, ==, toString, !=, getClass, ne, eq, Projection)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(package, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, simpleString, children, resolveNesting, wait, copy$default$2, $asInstanceOf, numberedTreeString, printSchema, map, productArity, equals, sortExpressions, statistics, treeString, transformChildrenDown, schemaString, argString, asInstanceOf, transformExpressions, generateTreeString, childrenResolved, log_, synchronized, nodeName, $isInstanceOf, logTrace, asCode, canEqual, expressions, outputSet, isTraceEnabled, makeCopy, transformUp, productPrefix, resolveChildren, cleanArgs, logName, notifyAll, otherCopyArgs, missingInput, isInstanceOf, stringArgs, child, references, <init>, mapChildren, schema, transformExpressionsDown, apply, flatMap, resolved, ==, fastEquals, transformExpressionsUp, clone, RedistributeData, sameResult, foreach, resolve, SortPartitions, partitionExpressions, copy, inputSet, toString, Repartition, logError, !=, collect, getClass, logWarning, output, copy$default$1, initializeIfNecessary, transformDown, transformAllExpressions, ne, transform, withNewChildren, statePrefix, eq, productIterator, log, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/package.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/package.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/package.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/package.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/package.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, package, wait, $asInstanceOf, resourceToString$default$2, resourceToString, equals, stackTraceToString, asInstanceOf, stringToFile, synchronized, $isInstanceOf, notifyAll, sideBySide, isInstanceOf, getTempFilePath$default$2, getTempFilePath, ==, clone, toString, !=, getClass, fileToString$default$2, fileToString, ne, eq, ##, finalize, hashCode, resourceToString$default$3, stringOrNull, benchmark.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala: Set(package, asInstanceOf, isInstanceOf, getTempFilePath, getClass)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala: Set(package, asInstanceOf, sideBySide, isInstanceOf, ==, toString, !=, ne, eq)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/package.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/package.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/package.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/package.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/package.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, package, wait, $asInstanceOf, equals, asInstanceOf, synchronized, $isInstanceOf, notifyAll, isInstanceOf, ==, clone, toString, !=, getClass, ne, eq, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, UncacheTableCommand, simpleString, children, DescribeCommand, resolveNesting, wait, ExplainCommand, copy$default$2, $asInstanceOf, numberedTreeString, extended, printSchema, map, productArity, equals, statistics, treeString, transformChildrenDown, schemaString, argString, kv, asInstanceOf, transformExpressions, generateTreeString, Command, childrenResolved, log_, synchronized, nodeName, $isInstanceOf, logTrace, asCode, canEqual, expressions, outputSet, isTraceEnabled, CacheTableCommand, makeCopy, transformUp, productPrefix, resolveChildren, cleanArgs, logName, notifyAll, otherCopyArgs, missingInput, isInstanceOf, stringArgs, references, <init>, mapChildren, schema, transformExpressionsDown, apply, flatMap, resolved, tableName, ==, fastEquals, transformExpressionsUp, clone, sameResult, foreach, resolve, copy$default$3, copy, inputSet, toString, logError, !=, collect, getClass, logWarning, output, copy$default$1, isExtended, initializeIfNecessary, transformDown, transformAllExpressions, SetCommand, ne, transform, withNewChildren, statePrefix, eq, productIterator, isLazy, log, plan, ##, finalize, table, productElement, transformChildrenUp, hashCode, getNodeNumbered, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SparkSQLParser.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, flatMap, tableName, ==, toString, getClass, ne, eq, isLazy, plan)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, simpleString, outer, Aggregate, children, desc, fraction, generator, resolveNesting, wait, projections, copy$default$2, $asInstanceOf, path, numberedTreeString, copy$default$5, seed, printSchema, join, map, productArity, equals, gid, statistics, treeString, transformChildrenDown, NoRelation, schemaString, argString, asInstanceOf, Distinct, transformExpressions, generateTreeString, childrenResolved, log_, Intersect, Limit, synchronized, left, withReplacement, partition, nodeName, $isInstanceOf, CreateTableAsSelect, logTrace, asCode, canEqual, expressions, copy$default$4, outputSet, isTraceEnabled, makeCopy, transformUp, productPrefix, WriteToFile, resolveChildren, cleanArgs, logName, notifyAll, readResolve, InsertIntoTable, otherCopyArgs, missingInput, isInstanceOf, stringArgs, child, Sample, alias, references, global, <init>, mapChildren, condition, schema, groupingExpressions, Generate, Rollup, transformExpressionsDown, Expand, apply, flatMap, resolved, tableName, ==, Project, Subquery, order, fastEquals, transformExpressionsUp, clone, allowExisting, sameResult, foreach, Cube, resolve, $init$, Except, limitExpr, aggregations, copy$default$3, copy, inputSet, groupByExprs, toString, Join, GroupingAnalytics, logError, !=, aggregateExpressions, collect, joinType, getClass, databaseName, logWarning, Union, output, copy$default$1, initializeIfNecessary, GroupingSets, overwrite, transformDown, transformAllExpressions, projectList, Filter, Sort, ne, generatorOutput, transform, withNewChildren, statePrefix, eq, productIterator, bitmasks, log, right, ##, finalize, table, productElement, transformChildrenUp, hashCode, getNodeNumbered, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Catalog.scala: Set(map, isInstanceOf, alias, <init>, tableName, ==, Subquery, databaseName, ne, table)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(map, asInstanceOf, left, partition, expressions, transformUp, isInstanceOf, child, <init>, condition, groupingExpressions, apply, flatMap, ==, aggregateExpressions, collect, joinType, output, projectList, ne, transform, right, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(outer, fraction, generator, path, seed, join, map, asInstanceOf, withReplacement, expressions, isInstanceOf, alias, <init>, condition, apply, tableName, ==, limitExpr, toString, joinType, output, overwrite, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, NoRelation, asInstanceOf, expressions, isInstanceOf, alias, <init>, apply, flatMap, tableName, ==, joinType, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(simpleString, children, map, asInstanceOf, transformExpressions, childrenResolved, left, expressions, makeCopy, isInstanceOf, child, <init>, apply, resolved, ==, Project, inputSet, !=, Union, output, transformAllExpressions, ne, transform, right, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, gid, asInstanceOf, transformExpressions, childrenResolved, logTrace, expressions, outputSet, transformUp, resolveChildren, isInstanceOf, child, alias, references, global, <init>, condition, groupingExpressions, Rollup, apply, flatMap, resolved, tableName, ==, order, foreach, Cube, resolve, aggregations, groupByExprs, GroupingAnalytics, !=, aggregateExpressions, collect, databaseName, output, GroupingSets, transformDown, projectList, ne, transform, bitmasks, table, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(children, map, asInstanceOf, left, partition, expressions, outputSet, isInstanceOf, child, references, <init>, condition, transformExpressionsDown, apply, flatMap, ==, transformExpressionsUp, limitExpr, !=, collect, joinType, Union, output, transformAllExpressions, projectList, ne, transform, right)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	buildNonSelectExprSet, notify, unapply, unapplySeq, ruleName, curried, Once, name, batches, wait, $asInstanceOf, compose, productArity, equals, ImplicitGenerate, asInstanceOf, falseValues, isFloat, log_, synchronized, trueValues, FunctionArgumentConversion, intTypeToFixed, Division, CheckResolution, $isInstanceOf, andThen, tupled, containsAggregate, maxIterations, logTrace, TrimGroupingAliases, canEqual, Analyzer, BooleanComparisons, isTraceEnabled, containsAggregates, productPrefix, logName, notifyAll, readResolve, ResolveFunctions, CaseWhenCoercion, Strategy, FixedPoint, fixedPoint, expand, isInstanceOf, CheckAggregation, StringToIntegralCasts, <init>, ResolveReferences, typeCoercionRules, stringNaN, DecimalPrecision, apply, BooleanCasts, ==, EliminateAnalysisOperators, ConvertNaNs, ResolveSortReferences, clone, strategy, PromoteStrings, copy, PropagateTypes, SimpleAnalyzer, toString, resolver, logError, containsStar, !=, ResolveRelations, rules, getClass, logWarning, Batch, copy$default$1, initializeIfNecessary, ne, ResolveGroupingAnalytics, extendedRules, GlobalAggregates, eq, productIterator, bitmasks, log, WidenTypes, UnresolvedHavingClauseAttributes, ##, finalize, productElement, hashCode, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(name, asInstanceOf, isInstanceOf, <init>, apply, ==, SimpleAnalyzer, toString, eq)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala source file has the following implicit definitions changed:[0m
[0m[[0mdebug[0m] [0m	DslAttribute, DslString, DslSymbol, DslExpression, byteToLiteral, DslLogicalPlan, longToLiteral, shortToLiteral, intToLiteral, functionToUdfBuilder, binaryToLiteral, doubleToLiteral, StringToAttributeConversionHelper, booleanToLiteral, dateToLiteral, timestampToLiteral, symbolToUnresolvedAttribute, decimalToLiteral, bigDecimalToLiteral, stringToLiteral, floatToLiteral.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala)[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	newExprId, notify, groupingIdName, unapply, ExprId, Alias, nullable, n2, simpleString, children, name, wait, copy$default$2, $asInstanceOf, numberedTreeString, map, productArity, equals, treeString, transformChildrenDown, argString, f1, asInstanceOf, n1, generateTreeString, childrenResolved, curId, synchronized, VirtualColumn, EvaluatedType, nodeName, $isInstanceOf, c2, asCode, canEqual, copy$default$4, makeCopy, transformUp, productPrefix, NamedExpression, notifyAll, otherCopyArgs, isInstanceOf, eval, stringArgs, child, references, <init>, i1, id, mapChildren, typeSuffix, apply, withName, flatMap, resolved, ==, fastEquals, clone, AttributeReference, foreach, i2, newInstance, copy$default$3, copy, metadata, withQualifiers, toString, !=, withNullability, collect, getClass, qualifiers, copy$default$1, dataType, foldable, transformDown, Attribute, ne, exprId, eval$default$1, toAttribute, transform, withNewChildren, newGroupingId, eq, productIterator, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala: Set(map, asInstanceOf, NamedExpression, isInstanceOf, references, <init>, apply, flatMap, ==, foreach, Attribute, ne, exprId, toAttribute, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(nullable, map, asInstanceOf, childrenResolved, c2, isInstanceOf, eval, child, references, <init>, apply, resolved, ==, toString, !=, collect, dataType, foldable, Attribute, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, name, map, asInstanceOf, NamedExpression, isInstanceOf, <init>, apply, ==, AttributeReference, toString, withNullability, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala: Set(nullable, n2, f1, asInstanceOf, n1, EvaluatedType, isInstanceOf, eval, child, <init>, i1, resolved, ==, toString, dataType, foldable, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, NamedExpression, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala: Set(newExprId, groupingIdName, ExprId, Alias, nullable, name, asInstanceOf, curId, VirtualColumn, EvaluatedType, nodeName, NamedExpression, isInstanceOf, eval, child, <init>, id, typeSuffix, apply, resolved, ==, AttributeReference, metadata, toString, qualifiers, dataType, Attribute, exprId, eq, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala: Set(nullable, children, asInstanceOf, nodeName, isInstanceOf, eval, child, <init>, apply, flatMap, resolved, ==, toString, dataType, foldable, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala: Set(nullable, children, map, asInstanceOf, childrenResolved, isInstanceOf, eval, child, <init>, resolved, ==, toString, !=, dataType, foldable, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(groupingIdName, simpleString, children, name, map, asInstanceOf, childrenResolved, VirtualColumn, transformUp, isInstanceOf, child, references, <init>, apply, flatMap, resolved, ==, foreach, !=, collect, dataType, transformDown, ne, toAttribute, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala: Set(simpleString, children, map, treeString, asInstanceOf, makeCopy, transformUp, isInstanceOf, references, <init>, apply, flatMap, fastEquals, transformDown, Attribute, transform, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala: Set(unapply, nullable, name, map, treeString, asInstanceOf, synchronized, isInstanceOf, <init>, apply, ==, AttributeReference, foreach, newInstance, metadata, toString, !=, getClass, dataType, Attribute, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala: Set(children, name, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, Attribute, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala: Set(map, asInstanceOf, NamedExpression, isInstanceOf, references, <init>, apply, flatMap, ==, foreach, Attribute, ne, exprId, toAttribute, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala: Set(unapply, children, map, asInstanceOf, isInstanceOf, eval, child, <init>, apply, ==, getClass, dataType, Attribute, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(nullable, map, asInstanceOf, childrenResolved, c2, isInstanceOf, eval, child, references, <init>, apply, resolved, ==, toString, !=, collect, dataType, foldable, Attribute, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala: Set(unapply, nullable, name, map, asInstanceOf, isInstanceOf, <init>, apply, ==, AttributeReference, newInstance, metadata, toString, !=, dataType, Attribute, ne, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala: Set(map, asInstanceOf, eval, <init>, apply, flatMap, dataType, Attribute, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(name, map, asInstanceOf, transformUp, NamedExpression, isInstanceOf, child, <init>, apply, flatMap, ==, collect, qualifiers, Attribute, ne, exprId, toAttribute, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala: Set(children, map, asInstanceOf, eval, <init>, apply, flatMap, ==, dataType, Attribute, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala: Set(map, asInstanceOf, isInstanceOf, eval, <init>, apply, ==, toString, !=, Attribute, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, name, map, asInstanceOf, NamedExpression, isInstanceOf, <init>, apply, ==, AttributeReference, toString, withNullability, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala: Set(nullable, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, dataType, Attribute, exprId, transform, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala: Set(map, asInstanceOf, isInstanceOf, <init>, apply, ==, newInstance, toString, dataType, Attribute, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala: Set(asInstanceOf, eval, <init>, apply, Attribute)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, NamedExpression, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/ScriptTransformation.scala: Set(asInstanceOf, isInstanceOf, child, <init>, ==, toString, Attribute, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala: Set(asInstanceOf, isInstanceOf, <init>, apply, ==, AttributeReference, toString, Attribute, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/partitioning.scala: Set(asInstanceOf, isInstanceOf, child, <init>, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala: Set(children, name, map, asInstanceOf, EvaluatedType, nodeName, NamedExpression, isInstanceOf, <init>, apply, resolved, ==, toString, qualifiers, Attribute, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(unapply, nullable, map, asInstanceOf, EvaluatedType, nodeName, makeCopy, NamedExpression, isInstanceOf, eval, child, references, <init>, apply, ==, toString, !=, dataType, toAttribute, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(unapply, simpleString, children, name, map, asInstanceOf, childrenResolved, makeCopy, isInstanceOf, child, <init>, apply, resolved, ==, !=, dataType, ne, exprId, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala: Set(nullable, name, map, asInstanceOf, makeCopy, isInstanceOf, eval, child, <init>, apply, resolved, ==, copy, metadata, toString, dataType, Attribute, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(groupingIdName, simpleString, children, name, map, asInstanceOf, childrenResolved, VirtualColumn, transformUp, isInstanceOf, child, references, <init>, apply, flatMap, resolved, ==, foreach, !=, collect, dataType, transformDown, ne, toAttribute, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala: Set(map, asInstanceOf, isInstanceOf, eval, child, <init>, apply, ==, clone, !=, dataType, Attribute, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(children, map, asInstanceOf, childrenResolved, VirtualColumn, NamedExpression, isInstanceOf, eval, child, <init>, apply, resolved, ==, AttributeReference, withQualifiers, toString, !=, withNullability, dataType, Attribute, ne, toAttribute, newGroupingId, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala: Set(children, name, map, asInstanceOf, childrenResolved, nodeName, NamedExpression, isInstanceOf, <init>, apply, withName, flatMap, resolved, ==, toString, !=, getClass, qualifiers, dataType, Attribute, ne, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(unapply, nullable, children, map, asInstanceOf, NamedExpression, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, Attribute, ne, toAttribute, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(unapply, children, map, asInstanceOf, curId, synchronized, isInstanceOf, eval, child, <init>, apply, ==, toString, !=, getClass, dataType, Attribute, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala: Set(children, asInstanceOf, childrenResolved, EvaluatedType, isInstanceOf, eval, references, <init>, apply, flatMap, resolved, ==, toString, !=, dataType, foldable, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeMap.scala: Set(ExprId, map, <init>, Attribute, exprId)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala: Set(asInstanceOf, isInstanceOf, child, <init>, apply, getClass, transform)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/package.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/package.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/package.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/package.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/package.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, package, wait, $asInstanceOf, equals, asInstanceOf, synchronized, $isInstanceOf, notifyAll, isInstanceOf, ==, clone, toString, !=, getClass, ne, eq, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala)[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala source file has the following implicit definitions changed:[0m
[0m[[0mdebug[0m] [0m	literal, accept, regex.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following member ref dependencies of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala are invalidated:[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala[0m
[0m[[0mdebug[0m] [0mThe following member ref dependencies of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala are invalidated:[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Rand.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SortOrder.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SpecificMutableRow.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/arithmetic.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/complexTypes.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/nullFunctions.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/sets.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/TestRelation.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/commands.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/physical/partitioning.scala[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, nullable, n2, simpleString, children, wait, copy$default$2, $asInstanceOf, numberedTreeString, map, productArity, equals, treeString, transformChildrenDown, argString, f1, asInstanceOf, n1, generateTreeString, childrenResolved, synchronized, EvaluatedType, nodeName, $isInstanceOf, c2, asCode, canEqual, makeCopy, transformUp, productPrefix, notifyAll, otherCopyArgs, isInstanceOf, eval, stringArgs, references, <init>, ScalaUdf, i1, mapChildren, apply, flatMap, resolved, ==, fastEquals, clone, function, foreach, i2, copy$default$3, copy, toString, !=, collect, getClass, copy$default$1, dataType, foldable, transformDown, ne, eval$default$1, transform, withNewChildren, eq, productIterator, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/package.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/package.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/package.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/package.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/package.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, package, wait, $asInstanceOf, equals, asInstanceOf, synchronized, $isInstanceOf, notifyAll, isInstanceOf, ==, clone, toString, !=, getClass, ne, ScalaReflectionLock, eq, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala: Set(package, asInstanceOf, synchronized, isInstanceOf, ==, toString, !=, getClass, ne, ScalaReflectionLock, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala: Set(package, asInstanceOf, isInstanceOf, getClass, ScalaReflectionLock)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SpecificMutableRow.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SpecificMutableRow.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SpecificMutableRow.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SpecificMutableRow.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/SpecificMutableRow.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	toIterable, withFilter, toTraversable, notify, withPadding, anyNull, find, span, flatten, MutableValue, toBuffer, count, getShort, reduceOption, sliceWithKnownDelta, wait, +:, foldRight, indices, takeWhile, stringPrefix, $asInstanceOf, splitAt, minBy, size, union, intersect, inits, zip, compose, toSet, corresponds, :\, duplicate, map, sliding$default$2, takeRight, dropWhile, toMap, filterNot, equals, par, unzip3, isNull, repr, startsWith, toList, lastIndexOf, isNullAt, setString, isTraversableAgain, head, asInstanceOf, sameElements, unzip, getDouble, _hasNext, reduceLeftOption, sortBy, getString, synchronized, sliding, Self, lengthCompare, partition, indexOfSlice, aggregate, $isInstanceOf, forall, newBuilder, andThen, mkString, min, scanRight, sequential, CombinationsItr, setBoolean, x$1, fold, buffer, getAs, scan, occCounts, nonEmpty, SpecificMutableRow, canEqual, tail, MutableFloat, lastOption, dropRight, iterator, last, orElse, offs, MutableInt, lastIndexOfSlice, /:\, takeDestructively, setByte, notifyAll, /:, getByte, toIterator, addString, pad, to, setInt, collectFirst, drop, isInstanceOf, reverse, filter, isDefinedAt, sortWith, ++:, endsWith, MutableLong, GroupedIterator, <init>, containsSlice, toStream, go, companion, max, buffered, combinations, tails, cnts, updated, apply, ++, grouped, diff, flatMap, getFloat, take, gap, parCombiner, reduceRight, groupBy, ==, maxBy, :+, indexWhere, fill, sliceWithKnownBound, sorted, clone, permutations, distinct, slice, foreach, getInt, exists, x$4, reduceRightOption, toVector, toIndexedSeq, copyToBuffer, segmentLength, toArray, reduce, MutableDouble, padTo, MutableShort, toSeq, boxed, next, zipWithIndex, idxs, MutableBoolean, swap, copy, values, toString, genericBuilder, getBoolean, copyToArray, runWith, length, seq, !=, transpose, setShort, _partial, MutableAny, padding, collect, headOption, PermutationsItr, getClass, WithFilter, setNullAt, update, hasDefiniteSize, setLong, patch, foldLeft, contains, nums, toCollection, isEmpty, ne, elms, withPartial, iterateUntilEmpty, init, reversed, hasNext, indexOf, reduceLeft, value, lastIndexWhere, lift, eq, prefixLength, filled, reverseMap, sum, thisCollection, reverseIterator, ##, scanLeft, finalize, getLong, setFloat, hashCode, zipAll, product, view, MutableByte, applyOrElse, setDouble.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	castToBinary, castToByte, castToTimestamp, castToDouble, notify, unapply, nullable, n2, simpleString, children, castToString, wait, castStruct, copy$default$2, $asInstanceOf, numberedTreeString, castToShort, map, productArity, equals, treeString, transformChildrenDown, argString, f1, asInstanceOf, n1, timestampToDouble, generateTreeString, childrenResolved, castMap, log_, synchronized, EvaluatedType, nodeName, changePrecision, $isInstanceOf, c2, threadLocalDateFormat, logTrace, asCode, canEqual, isTraceEnabled, timestampToString, makeCopy, transformUp, castToInt, productPrefix, logName, notifyAll, readResolve, decimalToTimestamp, threadLocalTimestampFormat, otherCopyArgs, isInstanceOf, eval, stringArgs, child, initialValue, resolvableNullability, references, <init>, i1, mapChildren, dateToDouble, castToDate, cast, forceNullable, apply, flatMap, resolved, ==, fastEquals, castToFloat, clone, foreach, castArray, resolve, castToLong, castToBoolean, timestampToLong, Cast, i2, copy, toString, castToDecimal, logError, timestampToDateString, !=, collect, buildCast, getClass, logWarning, copy$default$1, dataType, foldable, initializeIfNecessary, transformDown, dateToLong, ne, eval$default$1, transform, withNewChildren, eq, productIterator, log, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2, logDebug, logInfo, dateToString, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, isInstanceOf, <init>, apply, ==, Cast, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, isInstanceOf, <init>, i1, cast, apply, flatMap, ==, Cast, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(unapply, nullable, map, asInstanceOf, EvaluatedType, nodeName, makeCopy, isInstanceOf, eval, child, references, <init>, apply, ==, Cast, toString, !=, dataType, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(unapply, simpleString, children, map, asInstanceOf, childrenResolved, makeCopy, isInstanceOf, child, <init>, apply, resolved, ==, Cast, !=, dataType, ne, transform, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(unapply, nullable, children, map, asInstanceOf, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, Cast, !=, collect, dataType, foldable, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(unapply, children, map, asInstanceOf, synchronized, isInstanceOf, eval, child, <init>, apply, ==, toString, !=, getClass, dataType, ne, eq, log, logInfo)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/FunctionRegistry.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/FunctionRegistry.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/FunctionRegistry.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/FunctionRegistry.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/FunctionRegistry.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, super$lookupFunction, wait, $asInstanceOf, equals, lookupFunction, asInstanceOf, EmptyFunctionRegistry, synchronized, SimpleFunctionRegistry, $isInstanceOf, functionBuilders, notifyAll, FunctionRegistry, isInstanceOf, <init>, registerFunction, ==, clone, $init$, FunctionBuilder, toString, !=, getClass, ne, OverrideFunctionRegistry, eq, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(lookupFunction, asInstanceOf, EmptyFunctionRegistry, FunctionRegistry, isInstanceOf, <init>, ==, !=, ne)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/BoundAttribute.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, nullable, n2, simpleString, children, wait, copy$default$2, $asInstanceOf, numberedTreeString, bindReference$default$3, BoundReference, map, productArity, equals, treeString, transformChildrenDown, bindReference, argString, f1, asInstanceOf, n1, generateTreeString, childrenResolved, log_, BindReferences, synchronized, EvaluatedType, nodeName, $isInstanceOf, c2, logTrace, asCode, canEqual, isTraceEnabled, makeCopy, transformUp, productPrefix, logName, notifyAll, otherCopyArgs, isInstanceOf, eval, stringArgs, references, <init>, i1, mapChildren, apply, flatMap, resolved, ordinal, ==, fastEquals, clone, foreach, i2, copy$default$3, copy, toString, logError, !=, collect, getClass, logWarning, copy$default$1, dataType, foldable, initializeIfNecessary, transformDown, ne, eval$default$1, transform, withNewChildren, eq, productIterator, log, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala: Set(children, map, bindReference, asInstanceOf, BindReferences, isInstanceOf, eval, <init>, apply, ==, getClass, dataType, ne, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(nullable, map, bindReference, asInstanceOf, childrenResolved, BindReferences, c2, isInstanceOf, eval, references, <init>, apply, resolved, ==, toString, !=, collect, dataType, foldable, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala: Set(map, bindReference, asInstanceOf, BindReferences, eval, <init>, apply, flatMap, dataType, ne, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala: Set(children, map, bindReference, asInstanceOf, BindReferences, eval, <init>, apply, flatMap, ordinal, ==, dataType, ne, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Projection.scala: Set(map, bindReference, asInstanceOf, BindReferences, isInstanceOf, eval, <init>, apply, ==, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, isInstanceOf, <init>, apply, ordinal, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala: Set(bindReference, asInstanceOf, BindReferences, eval, <init>, apply, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Row.scala: Set(map, bindReference, asInstanceOf, BindReferences, isInstanceOf, eval, <init>, apply, ordinal, ==, clone, !=, dataType, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala: Set(children, map, bindReference, asInstanceOf, childrenResolved, BindReferences, nodeName, logTrace, isInstanceOf, <init>, apply, flatMap, resolved, ==, toString, !=, getClass, dataType, ne, eq, productIterator, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, map, asInstanceOf, synchronized, isInstanceOf, eval, <init>, apply, ordinal, ==, toString, !=, getClass, dataType, ne, eq, log, logInfo)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala)[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	nextPos, hashSetForType, notify, rowType, unapply, expressionEvaluator, curried, toolBox, EvaluatedExpression, mutatorForType, _bitset, wait, termForType, copy$default$2, $asInstanceOf, size, addWithoutResize, primitiveForType, productArity, equals, _capacity, rehash, LongHashSet, setColumn, CodeGenerator, asInstanceOf, mutableRowType, genericRowType, log_, curId, pos, synchronized, bind, $isInstanceOf, create, tupled, javaSeparator, hasher, logTrace, canEqual, copy$default$4, isTraceEnabled, projectionType, productPrefix, iterator, logName, notifyAll, readResolve, _mask, cache, code, isInstanceOf, getValueSafe, canonicalize, getColumn, <init>, mutableProjectionType, apply, freshName, accessorForType, debugLogging, primitiveTerm, ==, clone, _growThreshold, nullTerm, _size, copy$default$3, copy, toString, defaultPrimitive, getPos, logError, !=, nextPowerOf2, _data, getClass, getValue, logWarning, genericMutableRowType, copy$default$1, initializeIfNecessary, IntegerHashSet, hashcode, contains, ne, getBitSet, rehashIfNeeded, add, objectTerm, eq, productIterator, log, ##, finalize, productElement, hashCode, logDebug, logInfo, capacity, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala: Set(rowType, expressionEvaluator, toolBox, mutatorForType, termForType, size, CodeGenerator, asInstanceOf, mutableRowType, genericRowType, projectionType, code, <init>, apply, accessorForType, primitiveTerm, ==, nullTerm, ne, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala: Set(rowType, unapply, expressionEvaluator, toolBox, CodeGenerator, asInstanceOf, code, isInstanceOf, <init>, apply, primitiveTerm, ==, nullTerm, getClass, ne, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala: Set(rowType, expressionEvaluator, toolBox, size, setColumn, CodeGenerator, asInstanceOf, mutableRowType, code, <init>, mutableProjectionType, apply, primitiveTerm, nullTerm, genericMutableRowType, ne, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala: Set(rowType, expressionEvaluator, toolBox, CodeGenerator, asInstanceOf, code, <init>, apply, primitiveTerm, nullTerm, log)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/package.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/package.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/package.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/package.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/package.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	Resolver, notify, package, wait, $asInstanceOf, equals, caseInsensitiveResolution, asInstanceOf, synchronized, $isInstanceOf, caseSensitiveResolution, notifyAll, isInstanceOf, ==, clone, toString, !=, getClass, ne, eq, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala: Set(Resolver, package, asInstanceOf, isInstanceOf, ==, toString, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/LogicalPlan.scala: Set(Resolver, package, asInstanceOf, isInstanceOf, ==, toString, !=, getClass, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(package, caseInsensitiveResolution, asInstanceOf, caseSensitiveResolution, isInstanceOf, ==, !=, ne)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, unapply, nullable, n2, simpleString, children, wait, copy$default$2, $asInstanceOf, numberedTreeString, map, productArity, equals, treeString, transformChildrenDown, argString, NonNullLiteral, f1, asInstanceOf, n1, generateTreeString, childrenResolved, synchronized, EvaluatedType, nodeName, $isInstanceOf, Literal, c2, asCode, canEqual, makeCopy, transformUp, productPrefix, notifyAll, readResolve, otherCopyArgs, isInstanceOf, eval, stringArgs, references, <init>, i1, mapChildren, MutableLiteral, IntegerLiteral, apply, flatMap, resolved, ==, fastEquals, clone, foreach, i2, copy$default$3, copy, toString, !=, collect, getClass, copy$default$1, update, dataType, foldable, transformDown, ne, eval$default$1, transform, withNewChildren, value, eq, productIterator, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, Literal, isInstanceOf, <init>, apply, ==, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, Literal, isInstanceOf, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne, value)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(unapply, nullable, map, asInstanceOf, EvaluatedType, nodeName, Literal, makeCopy, isInstanceOf, eval, references, <init>, MutableLiteral, apply, ==, toString, !=, update, dataType, value, eq, productIterator)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala: Set(nullable, children, asInstanceOf, nodeName, isInstanceOf, eval, <init>, apply, flatMap, resolved, ==, toString, dataType, foldable, ne, value, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/HiveTypeCoercion.scala: Set(unapply, simpleString, children, map, asInstanceOf, childrenResolved, Literal, makeCopy, isInstanceOf, <init>, apply, resolved, ==, !=, dataType, ne, transform, value)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, Literal, transformUp, isInstanceOf, references, <init>, apply, flatMap, resolved, ==, foreach, !=, collect, dataType, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(unapply, nullable, children, map, asInstanceOf, Literal, isInstanceOf, eval, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform, value)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(unapply, children, map, asInstanceOf, synchronized, Literal, isInstanceOf, eval, <init>, apply, ==, toString, !=, getClass, dataType, ne, value, eq)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeMap.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeMap.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeMap.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeMap.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeMap.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	toIterable, withFilter, toTraversable, notify, DefaultKeySet, withPadding, find, span, flatten, toBuffer, count, reduceOption, sliceWithKnownDelta, wait, foldRight, takeWhile, stringPrefix, $asInstanceOf, empty, splitAt, minBy, size, union, intersect, inits, zip, compose, toSet, subsetOf, corresponds, :\, duplicate, map, sliding$default$2, takeRight, AttributeMap, dropWhile, toMap, filterNot, equals, par, unzip3, repr, toList, isTraversableAgain, FilteredKeys, head, asInstanceOf, sameElements, filterKeys, unzip, _hasNext, reduceLeftOption, &, synchronized, sliding, withDefault, Self, partition, aggregate, $isInstanceOf, forall, newBuilder, valuesIterator, andThen, mkString, min, scanRight, sequential, fold, |, buffer, keysIterator, scan, nonEmpty, canEqual, tail, lastOption, SubsetsItr, dropRight, iterator, last, orElse, /:\, takeDestructively, notifyAll, readResolve, /:, toIterator, addString, pad, to, keySet, collectFirst, drop, -, isInstanceOf, filter, isDefinedAt, ++:, GroupedIterator, <init>, toStream, go, withDefaultValue, companion, max, buffered, tails, updated, apply, ++, grouped, diff, flatMap, getOrElse, take, gap, parCombiner, reduceRight, groupBy, ==, maxBy, indexWhere, fill, sliceWithKnownBound, clone, ImmutableDefaultKeySet, slice, default, foreach, &~, exists, reduceRightOption, toVector, toIndexedSeq, copyToBuffer, toArray, reduce, subsets, padTo, toSeq, next, zipWithIndex, super$map, idxs, DefaultValuesIterable, values, toString, genericBuilder, copyToArray, runWith, length, seq, +, !=, MappedValues, get, transpose, _partial, padding, collect, headOption, getClass, WithFilter, hasDefiniteSize, mapValues, patch, --, foldLeft, contains, toCollection, isEmpty, ne, withPartial, iterateUntilEmpty, transform, init, reversed, hasNext, indexOf, reduceLeft, lift, eq, filled, sum, thisCollection, ##, scanLeft, finalize, keys, hashCode, zipAll, product, view, applyOrElse.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(reduceOption, empty, size, union, intersect, zip, toSet, subsetOf, map, AttributeMap, toMap, toList, asInstanceOf, reduceLeftOption, partition, nonEmpty, iterator, isInstanceOf, filter, <init>, apply, ++, diff, flatMap, getOrElse, ==, exists, reduce, toSeq, length, +, !=, get, collect, --, contains, isEmpty, ne, transform)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	hashSetForType, notify, rowType, unapply, expressionEvaluator, curried, toolBox, EvaluatedExpression, mutatorForType, wait, termForType, copy$default$2, $asInstanceOf, primitiveForType, productArity, equals, setColumn, asInstanceOf, mutableRowType, genericRowType, log_, curId, synchronized, GenerateMutableProjection, bind, $isInstanceOf, create, tupled, javaSeparator, logTrace, canEqual, copy$default$4, isTraceEnabled, projectionType, productPrefix, mutableRowName, logName, notifyAll, readResolve, cache, code, isInstanceOf, canonicalize, getColumn, <init>, mutableProjectionType, apply, freshName, accessorForType, debugLogging, primitiveTerm, ==, clone, nullTerm, copy$default$3, copy, toString, defaultPrimitive, logError, !=, getClass, logWarning, genericMutableRowType, copy$default$1, initializeIfNecessary, ne, objectTerm, eq, productIterator, log, ##, finalize, productElement, hashCode, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/stringOperations.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, nullable, n2, Like, simpleString, children, wait, copy$default$2, $asInstanceOf, numberedTreeString, Lower, pattern, map, productArity, equals, treeString, transformChildrenDown, argString, CaseConversionExpression, f1, asInstanceOf, Upper, n1, generateTreeString, StringComparison, childrenResolved, pos, synchronized, StringRegexExpression, left, EvaluatedType, nodeName, $isInstanceOf, RLike, c2, StartsWith, asCode, canEqual, Substring, makeCopy, transformUp, compile, productPrefix, notifyAll, cache, otherCopyArgs, isInstanceOf, eval, stringArgs, child, symbol, str, references, <init>, i1, mapChildren, apply, escape, flatMap, resolved, ==, fastEquals, clone, slice, foreach, $init$, i2, copy$default$3, copy, Contains, toString, !=, collect, getClass, copy$default$1, dataType, foldable, transformDown, matches, ne, EndsWith, eval$default$1, transform, withNewChildren, eq, compare, convert, productIterator, right, ##, finalize, productElement, transformChildrenUp, hashCode, len, getNodeNumbered, f2.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, pos, isInstanceOf, <init>, apply, ==, toString, dataType, eq, len)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, pattern, map, asInstanceOf, pos, left, isInstanceOf, eval, child, str, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform, right, len)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(map, asInstanceOf, isInstanceOf, str, <init>, i1, apply, flatMap, ==, i2, getClass, dataType, ne)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, nullable, n2, simpleString, children, wait, precision, copy$default$2, $asInstanceOf, numberedTreeString, map, productArity, equals, treeString, transformChildrenDown, argString, scale, f1, asInstanceOf, n1, generateTreeString, childrenResolved, synchronized, EvaluatedType, nodeName, $isInstanceOf, MakeDecimal, c2, asCode, canEqual, makeCopy, transformUp, productPrefix, notifyAll, otherCopyArgs, isInstanceOf, eval, stringArgs, child, references, <init>, i1, mapChildren, apply, flatMap, resolved, ==, fastEquals, clone, foreach, UnscaledValue, i2, copy$default$3, copy, toString, !=, collect, getClass, copy$default$1, dataType, foldable, transformDown, ne, eval$default$1, transform, withNewChildren, eq, productIterator, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(nullable, children, map, scale, asInstanceOf, isInstanceOf, eval, child, references, <init>, apply, flatMap, ==, !=, collect, dataType, foldable, ne, transform)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(children, precision, map, scale, asInstanceOf, synchronized, isInstanceOf, eval, child, <init>, apply, ==, toString, !=, getClass, dataType, ne, eq)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala source file has the following implicit definitions changed:[0m
[0m[[0mdebug[0m] [0m	asParser, keyword, accept, parser2packrat.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/package.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/package.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/package.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/package.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/trees/package.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, package, wait, $asInstanceOf, equals, asInstanceOf, log_, synchronized, $isInstanceOf, obj, logTrace, isTraceEnabled, logName, notifyAll, isInstanceOf, <init>, ==, clone, toString, logError, !=, getClass, logWarning, initializeIfNecessary, ne, TreeNodeRef, eq, log, ##, finalize, hashCode, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(package, asInstanceOf, isInstanceOf, <init>, ==, ne, TreeNodeRef, logDebug)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/AttributeSet.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	toIterable, withFilter, toTraversable, notify, find, span, flatten, toBuffer, count, reduceOption, sliceWithKnownDelta, wait, foldRight, takeWhile, stringPrefix, $asInstanceOf, AttributeEquals, splitAt, minBy, size, intersect, inits, toSet, subsetOf, :\, map, dropWhile, toMap, filterNot, equals, par, unzip3, repr, toList, isTraversableAgain, head, asInstanceOf, unzip, reduceLeftOption, synchronized, Self, partition, a, aggregate, $isInstanceOf, forall, newBuilder, mkString, min, scanRight, sequential, fold, scan, nonEmpty, tail, lastOption, iterator, last, /:\, notifyAll, readResolve, /:, toIterator, addString, to, collectFirst, drop, AttributeSet, -, isInstanceOf, filter, ++:, <init>, toStream, companion, max, tails, apply, ++, flatMap, take, parCombiner, reduceRight, groupBy, ==, maxBy, sliceWithKnownBound, clone, slice, foreach, exists, reduceRightOption, toVector, toIndexedSeq, copyToBuffer, toArray, reduce, toSeq, toString, genericBuilder, copyToArray, seq, +, !=, transpose, collect, headOption, getClass, WithFilter, hasDefiniteSize, baseSet, --, foldLeft, contains, toCollection, isEmpty, ne, iterateUntilEmpty, init, reversed, reduceLeft, eq, sum, thisCollection, ##, scanLeft, finalize, hashCode, product, view.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/QueryPlan.scala: Set(map, asInstanceOf, nonEmpty, AttributeSet, isInstanceOf, <init>, apply, flatMap, toArray, toSeq, +, --)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/predicates.scala: Set(size, subsetOf, map, asInstanceOf, forall, mkString, last, -, isInstanceOf, <init>, apply, ++, ==, exists, toArray, toSeq, toString, +, !=, collect, contains, isEmpty, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/namedExpressions.scala: Set(toSet, asInstanceOf, AttributeSet, isInstanceOf, <init>, apply, ==, toString, +, eq, hashCode)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregates.scala: Set(count, size, map, head, asInstanceOf, mkString, iterator, isInstanceOf, <init>, apply, ==, toArray, toString, +, !=, isEmpty, reduceLeft, eq, sum)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(find, map, filterNot, asInstanceOf, a, aggregate, forall, mkString, nonEmpty, AttributeSet, -, isInstanceOf, <init>, apply, ++, flatMap, ==, foreach, exists, toSeq, +, !=, collect, --, contains, isEmpty, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(reduceOption, size, intersect, toSet, subsetOf, map, toMap, toList, asInstanceOf, reduceLeftOption, partition, nonEmpty, iterator, AttributeSet, isInstanceOf, filter, <init>, apply, ++, flatMap, ==, exists, reduce, toSeq, +, !=, collect, --, contains, isEmpty, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Expression.scala: Set(asInstanceOf, iterator, AttributeSet, isInstanceOf, <init>, apply, flatMap, ==, exists, toString, !=, eq)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala)[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala[0m
[0m[[0mdebug[0m] [0mIncluding /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala by /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala, /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, unapply, unapplySeq, curried, Once, name, batches, wait, $asInstanceOf, compose, productArity, equals, asInstanceOf, log_, synchronized, $isInstanceOf, andThen, tupled, maxIterations, logTrace, canEqual, isTraceEnabled, productPrefix, logName, notifyAll, readResolve, Strategy, FixedPoint, isInstanceOf, <init>, RuleExecutor, apply, ==, clone, strategy, copy, toString, logError, !=, rules, getClass, logWarning, Batch, copy$default$1, initializeIfNecessary, ne, eq, productIterator, log, ##, finalize, productElement, hashCode, logDebug, logInfo, initializeLogging.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(name, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala: Set(unapply, asInstanceOf, isInstanceOf, <init>, apply, ==, getClass, ne, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala: Set(asInstanceOf, <init>, apply, ne, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala: Set(asInstanceOf, <init>, apply, ==, ne, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(name, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala: Set(asInstanceOf, <init>, apply, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(unapplySeq, Once, name, batches, asInstanceOf, maxIterations, logTrace, isInstanceOf, <init>, RuleExecutor, apply, ==, !=, rules, Batch, ne, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(unapply, unapplySeq, batches, asInstanceOf, isInstanceOf, <init>, RuleExecutor, apply, ==, !=, rules, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/package.scala: Set(batches, asInstanceOf, isInstanceOf, <init>, RuleExecutor, apply, rules, getClass)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateOrdering.scala: Set(unapply, asInstanceOf, isInstanceOf, <init>, apply, ==, getClass, ne, logDebug)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateMutableProjection.scala: Set(asInstanceOf, <init>, apply, ne, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GenerateProjection.scala: Set(asInstanceOf, <init>, apply, ==, ne, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/GeneratePredicate.scala: Set(asInstanceOf, <init>, apply, log)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala: Set(unapply, asInstanceOf, synchronized, isInstanceOf, <init>, apply, ==, toString, !=, getClass, ne, eq, log, logInfo)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala source file has the following implicit definitions changed:[0m
[0m[[0mdebug[0m] [0m	CaseClassRelation.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following member ref dependencies of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala are invalidated:[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/ScalaUdf.scala[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/joinTypes.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/joinTypes.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/joinTypes.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/joinTypes.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/joinTypes.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, wait, $asInstanceOf, LeftSemi, productArity, equals, FullOuter, asInstanceOf, synchronized, $isInstanceOf, LeftOuter, canEqual, RightOuter, productPrefix, notifyAll, readResolve, isInstanceOf, <init>, ==, clone, Inner, JoinType, toString, !=, getClass, ne, eq, productIterator, ##, finalize, productElement, hashCode.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala: Set(asInstanceOf, isInstanceOf, <init>, ==, JoinType, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(asInstanceOf, isInstanceOf, <init>, ==, Inner, JoinType, toString, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/SqlParser.scala: Set(LeftSemi, FullOuter, asInstanceOf, LeftOuter, RightOuter, isInstanceOf, <init>, ==, Inner, JoinType, getClass, ne)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(LeftSemi, FullOuter, asInstanceOf, LeftOuter, RightOuter, isInstanceOf, <init>, ==, JoinType, toString, !=, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala: Set(LeftSemi, FullOuter, asInstanceOf, LeftOuter, RightOuter, isInstanceOf, <init>, ==, Inner, !=, ne)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/generators.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	notify, nullable, n2, simpleString, children, Generator, wait, copy$default$2, $asInstanceOf, makeOutput, numberedTreeString, map, productArity, equals, treeString, transformChildrenDown, argString, f1, asInstanceOf, n1, _output, generateTreeString, childrenResolved, synchronized, EvaluatedType, nodeName, $isInstanceOf, c2, asCode, canEqual, makeCopy, transformUp, productPrefix, notifyAll, Explode, otherCopyArgs, isInstanceOf, eval, stringArgs, child, references, <init>, i1, mapChildren, apply, flatMap, resolved, ==, fastEquals, clone, foreach, i2, copy, toString, !=, elementTypes, collect, getClass, output, copy$default$1, dataType, foldable, transformDown, attributeNames, ne, eval$default$1, transform, withNewChildren, eq, productIterator, ##, finalize, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/basicOperators.scala: Set(children, Generator, map, asInstanceOf, childrenResolved, isInstanceOf, eval, child, <init>, apply, resolved, ==, toString, !=, output, dataType, ne, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, Generator, map, asInstanceOf, isInstanceOf, <init>, apply, ==, toString, output, dataType, eq)[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/Analyzer.scala: Set(simpleString, children, map, asInstanceOf, childrenResolved, transformUp, isInstanceOf, child, references, <init>, apply, flatMap, resolved, ==, foreach, !=, collect, output, dataType, transformDown, ne, transform)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/WrapDynamic.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m	toIterable, withFilter, toTraversable, notify, withPadding, unapply, anyNull, find, span, nullable, flatten, n2, simpleString, children, toBuffer, count, getShort, isPrimitive, reduceOption, sliceWithKnownDelta, wait, WrapDynamic, +:, DynamicType, foldRight, indices, takeWhile, stringPrefix, $asInstanceOf, splitAt, minBy, numberedTreeString, size, union, intersect, inits, zip, compose, toSet, corresponds, :\, selectDynamic, duplicate, map, sliding$default$2, takeRight, dropWhile, productArity, toMap, filterNot, equals, treeString, transformChildrenDown, par, json, unzip3, repr, argString, startsWith, toList, lastIndexOf, isNullAt, isTraversableAgain, f1, head, asInstanceOf, sameElements, n1, generateTreeString, unzip, getDouble, _hasNext, childrenResolved, reduceLeftOption, sortBy, getString, synchronized, sliding, Self, lengthCompare, EvaluatedType, partition, indexOfSlice, nodeName, aggregate, $isInstanceOf, forall, newBuilder, andThen, mkString, min, scanRight, sequential, CombinationsItr, c2, x$1, fold, buffer, getAs, asCode, scan, occCounts, nonEmpty, canEqual, tail, makeCopy, transformUp, lastOption, dropRight, productPrefix, iterator, typeName, last, orElse, offs, lastIndexOfSlice, /:\, takeDestructively, notifyAll, readResolve, /:, getByte, toIterator, addString, pad, to, collectFirst, drop, otherCopyArgs, isInstanceOf, eval, reverse, stringArgs, filter, isDefinedAt, sortWith, ++:, references, endsWith, GroupedIterator, <init>, containsSlice, toStream, i1, go, mapChildren, companion, schema, max, buffered, combinations, prettyJson, tails, cnts, updated, apply, ++, grouped, diff, flatMap, getFloat, take, resolved, gap, parCombiner, reduceRight, groupBy, ==, maxBy, :+, indexWhere, fill, fastEquals, sliceWithKnownBound, sorted, clone, permutations, distinct, slice, foreach, DynamicRow, getInt, exists, x$4, reduceRightOption, toVector, toIndexedSeq, copyToBuffer, segmentLength, toArray, reduce, padTo, toSeq, next, zipWithIndex, idxs, i2, swap, copy, toString, genericBuilder, getBoolean, copyToArray, runWith, length, seq, !=, transpose, _partial, padding, collect, headOption, PermutationsItr, getClass, WithFilter, copy$default$1, hasDefiniteSize, dataType, foldable, transformDown, patch, foldLeft, contains, nums, toCollection, isEmpty, ne, elms, eval$default$1, withPartial, iterateUntilEmpty, transform, init, reversed, hasNext, withNewChildren, indexOf, reduceLeft, jsonValue, lastIndexWhere, lift, eq, prefixLength, filled, productIterator, reverseMap, sum, thisCollection, reverseIterator, ##, scanLeft, finalize, getLong, productElement, transformChildrenUp, hashCode, getNodeNumbered, f2, zipAll, product, view, applyOrElse.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following modified names cause invalidation of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala: Set(nullable, map, asInstanceOf, x$1, to, isInstanceOf, <init>, apply, ==, DynamicRow, x$4, toString, dataType, eq)[0m
[0m[[0mdebug[0m] [0mInvalidating /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/decimal/Decimal.scala...[0m
[0m[[0mdebug[0m] [0mInvalidating (transitively) by inheritance from /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/decimal/Decimal.scala...[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/decimal/Decimal.scala)[0m
[0m[[0mdebug[0m] [0mInvalidated by transitive inheritance dependency: Set(/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/decimal/Decimal.scala)[0m
[0m[[0mdebug[0m] [0mThe /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/decimal/Decimal.scala source file has the following implicit definitions changed:[0m
[0m[[0mdebug[0m] [0m	mkNumericOps, mkOrderingOps.[0m
[0m[[0mdebug[0m] [0mAll member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0mThe following member ref dependencies of /Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/decimal/Decimal.scala are invalidated:[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/ScalaReflection.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/dsl/package.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/Cast.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/codegen/CodeGenerator.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/decimalFunctions.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/literals.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala[0m
[0m[[0mdebug[0m] [0m	/Users/bleonard/Documents/Databases/spark/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/types/dataTypes.scala[0m
[0m[[0mdebug[0m] [0mNew invalidations:[0m
[0m[[0mdebug[0m] [0m	Set()[0m
[0m[[0mdebug[0m] [0mInitial set of included nodes: Set()[0m
[0m[[0mdebug[0m] [0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0mdebug[0m] [0m	Set()[0m
[0m[[0mdebug[0m] [0mAll newly invalidated sources after taking into account (previously) recompiled sources:Set()[0m
